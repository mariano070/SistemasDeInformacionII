spec_i([ trn,41,'Redes de una Ubicación de Hardware','THDW_REDES',[],spa,'10_1_5-42940' ]).
 
struct_i(39,0,[ 'Thdw_ubi_cod_','Red_id','Mode','Sistema','Usuario' ],[]).
 
level_i(39,[ 39,[ [ 39,many ],[ 26,one ] ],[ 306,300 ],[],[],[],[ 306,300 ],'ITHDW_UBICACIONES_REDES',[ 39,[] ],[] ]).
 
tw_i(39,[ [ 26,[ [ 39,306,306 ] ] ] ]).
 
lwi_i(39,[ [] ]).
 
 
 
 
ta_i(39,[ [ [ 39,300 ],[ 39,301 ],[ 39,308 ],[ 39,309 ],[ 39,310 ],[ 39,315 ],[ 39,316 ],[ 39,317 ],[ 39,318 ],[ 39,319 ],[ 39,320 ],[ 39,321 ],[ 39,322 ],[ 39,323 ],[ 39,324 ],[ 39,325 ],[ 39,326 ],[ 39,327 ],[ 39,306 ] ] ]).
 
las_i(39,[ [ 'Thdw_ubi_cod_','Red_id','Mode','Sistema','Usuario',306,300,'GxBScreen',301,308,309,310,315,316,317,318,319,320,321,322,323,324,325,326,327 ] ]).
 
lac_i(39,[ [ 306,300,301,308,309,310,315,316,317,318,319,320,321,322,323,324,325,326,327 ] ]).
 
 
lits_i('Ubicación:',5,10).
lits_i('Cód. de Red:',5,10).
lits_i('Descripción:',5,10).
lits_i('Dir. IP Desde:',5,10).
lits_i('Dir. IP Hasta:',5,10).
lits_i('Máscara de Red:',5,10).
lits_i('Puerta de Enlace:',5,10).
 
cls_i([ 0,0 ],[ 5,29 ]).
 
pos_i(306,[ 0,0,0 ]).
pos_i(300,[ 0,0,0 ]).
pos_i(301,[ 0,0,0 ]).
pos_i(308,[ 0,0,0 ]).
pos_i(309,[ 0,0,0 ]).
pos_i(310,[ 0,0,0 ]).
pos_i(315,[ 0,0,0 ]).
pos_i(316,[ 0,0,0 ]).
pos_i(317,[ 0,0,0 ]).
pos_i(318,[ 0,0,0 ]).
pos_i(319,[ 0,0,0 ]).
pos_i(320,[ 0,0,0 ]).
pos_i(321,[ 0,0,0 ]).
pos_i(322,[ 0,0,0 ]).
pos_i(323,[ 0,0,0 ]).
pos_i(324,[ 0,0,0 ]).
pos_i(325,[ 0,0,0 ]).
pos_i(326,[ 0,0,0 ]).
pos_i(327,[ 0,0,0 ]).
 
 
default_i(e(325,4,3,[ t('22',3) ])).
default_i(e(324,4,3,[ t('172',3) ])).
default_i(e(317,4,3,[ t('22',3) ])).
default_i(e(316,4,3,[ t('172',3) ])).
default_i(e(309,4,3,[ t('22',3) ])).
default_i(e(308,4,3,[ t('172',3) ])).
default_i(e(322,4,3,[ t('255',3) ])).
default_i(e(321,4,3,[ t('255',3) ])).
default_i(e(320,4,3,[ t('255',3) ])).
 
rule_i(0,datastore(3,'DS_LAST_CHANGE','')).
rule_i(0,datastore(3,'LOCK_RETRY','10')).
rule_i(0,datastore(3,'WAIT_RECORD','0')).
rule_i(0,datastore(3,'SQLSERVER_VERSION','9')).
rule_i(0,datastore(3,'COMMENT_ON','No')).
rule_i(0,datastore(3,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(3,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(3,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(3,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(3,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(3,'CS_SCHEMA','')).
rule_i(0,datastore(3,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(3,'JRN400','QSQJRN')).
rule_i(0,datastore(3,'CREATE_SAVF','Yes')).
rule_i(0,datastore(3,'PGMLIB','')).
rule_i(0,datastore(3,'DTALIB','')).
rule_i(0,datastore(3,'CC_USER_PASS','')).
rule_i(0,datastore(3,'CC_USER_ID','')).
rule_i(0,datastore(3,'CC_SERVER','')).
rule_i(0,datastore(3,'CC_DBNAME','')).
rule_i(0,datastore(3,'RecycleRWMin','30')).
rule_i(0,datastore(3,'RecycleRWType','1')).
rule_i(0,datastore(3,'RecycleRW','-1')).
rule_i(0,datastore(3,'POOL_STARTUP','No')).
rule_i(0,datastore(3,'POOLSIZE_RW','10')).
rule_i(0,datastore(3,'UnlimitedRWPool','-1')).
rule_i(0,datastore(3,'PoolRWEnabled','-1')).
rule_i(0,datastore(3,'CS_RPCPGML','')).
rule_i(0,datastore(3,'JDBC_DATASOURCE','')).
rule_i(0,datastore(3,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(3,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(3,'USER_PASSWORD','')).
rule_i(0,datastore(3,'USER_ID','')).
rule_i(0,datastore(3,'TRUSTED_CONNECTION','Yes')).
rule_i(0,datastore(3,'CS_CONNECT','First')).
rule_i(0,datastore(3,'DBMS_PORT','')).
rule_i(0,datastore(3,'CS_SERVER','')).
rule_i(0,datastore(3,'CS_DBNAME','')).
rule_i(0,datastore(3,'CS_FLEDSNAME','')).
rule_i(0,datastore(3,'CS_DRVNAME','sql server')).
rule_i(0,datastore(3,'CS_DSNAME','')).
rule_i(0,datastore(3,'DB_URL','')).
rule_i(0,datastore(3,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(3,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(3,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(3,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(3,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(3,'MAIN_DS','-1')).
rule_i(0,datastore(3,'REORG_GEN','8')).
rule_i(0,datastore(3,'HelpKeyword','23')).
rule_i(0,datastore(3,'DBMS',12)).
rule_i(0,datastore(3,'NAME','DESARROLLO')).
rule_i(0,datastore(2,'DS_LAST_CHANGE','')).
rule_i(0,datastore(2,'LOCK_RETRY','10')).
rule_i(0,datastore(2,'WAIT_RECORD','0')).
rule_i(0,datastore(2,'SQLSERVER_VERSION','9')).
rule_i(0,datastore(2,'COMMENT_ON','No')).
rule_i(0,datastore(2,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(2,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(2,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(2,'CS_SCHEMA','')).
rule_i(0,datastore(2,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(2,'JRN400','QSQJRN')).
rule_i(0,datastore(2,'CREATE_SAVF','Yes')).
rule_i(0,datastore(2,'PGMLIB','')).
rule_i(0,datastore(2,'DTALIB','')).
rule_i(0,datastore(2,'CC_USER_PASS','')).
rule_i(0,datastore(2,'CC_USER_ID','')).
rule_i(0,datastore(2,'CC_SERVER','')).
rule_i(0,datastore(2,'CC_DBNAME','')).
rule_i(0,datastore(2,'RecycleRWMin','30')).
rule_i(0,datastore(2,'RecycleRWType','1')).
rule_i(0,datastore(2,'RecycleRW','-1')).
rule_i(0,datastore(2,'POOL_STARTUP','No')).
rule_i(0,datastore(2,'POOLSIZE_RW','10')).
rule_i(0,datastore(2,'UnlimitedRWPool','-1')).
rule_i(0,datastore(2,'PoolRWEnabled','-1')).
rule_i(0,datastore(2,'CS_RPCPGML','')).
rule_i(0,datastore(2,'JDBC_DATASOURCE','')).
rule_i(0,datastore(2,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(2,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(2,'USER_PASSWORD','')).
rule_i(0,datastore(2,'USER_ID','')).
rule_i(0,datastore(2,'TRUSTED_CONNECTION','Yes')).
rule_i(0,datastore(2,'CS_CONNECT','First')).
rule_i(0,datastore(2,'DBMS_PORT','')).
rule_i(0,datastore(2,'CS_SERVER','')).
rule_i(0,datastore(2,'CS_DBNAME','')).
rule_i(0,datastore(2,'CS_FLEDSNAME','')).
rule_i(0,datastore(2,'CS_DRVNAME','sql server')).
rule_i(0,datastore(2,'CS_DSNAME','')).
rule_i(0,datastore(2,'DB_URL','')).
rule_i(0,datastore(2,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(2,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(2,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(2,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(2,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(2,'MAIN_DS','-1')).
rule_i(0,datastore(2,'REORG_GEN','8')).
rule_i(0,datastore(2,'HelpKeyword','23')).
rule_i(0,datastore(2,'DBMS',12)).
rule_i(0,datastore(2,'NAME',soporte_notebook)).
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','9')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'CC_USER_PASS','')).
rule_i(0,datastore(1,'CC_USER_ID','')).
rule_i(0,datastore(1,'CC_SERVER','')).
rule_i(0,datastore(1,'CC_DBNAME','')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD',gx)).
rule_i(0,datastore(1,'USER_ID',gx)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','172.22.108.50')).
rule_i(0,datastore(1,'CS_DBNAME','MarianoTesis')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('MTIER_OPT','Yes')).
rule_i(0,prop('CS_ORA_FORUPD','UMPV')).
rule_i(0,prop('Hint_firstrows','UMPV')).
rule_i(0,prop('AUTOENTER','UMPV')).
rule_i(0,prop('BEEPONMSG','UMPV')).
rule_i(0,prop('BEEPONERROR','UMPV')).
rule_i(0,prop('GENERATE_ILE','UMPV')).
rule_i(0,prop('TRNCMT','YES')).
rule_i(0,prop('NULLVALUE_AS_NULL','UMPV')).
rule_i(0,prop('INITIALIZE_NEW','UMPV')).
rule_i(0,prop('STD_FUNC_OBJECT','No')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142 spc0060')).
rule_i(0,prop('WBCHAR','')).
rule_i(0,prop('WBATTR',none)).
rule_i(0,prop('WBCOLOR',none)).
rule_i(0,prop('WNDPOP','NO')).
rule_i(0,prop('OKBUT','YES')).
rule_i(0,prop('AUTOCENTER','UMPV')).
rule_i(0,prop('DLT_BUTTON',i(98,'aa1ab5fc-b1c8-4d23-9ba5-98ca435ab24c'))).
rule_i(0,prop('CNF_BUTTON',i(98,'6f51d721-a2c0-4f61-a087-97f3e2fdbaa8'))).
rule_i(0,prop('UPD_BUTTON',i(98,'1d924cf2-f606-4bd3-9a66-7dc1bf7bf586'))).
rule_i(0,prop('ADD_BUTTON',i(98,'429b3a58-af68-4143-bd10-de9adb36bd84'))).
rule_i(0,prop('AUTOSCROLL_FORM','UMPV')).
rule_i(0,prop('SHOW_FRM','UMPV')).
rule_i(0,prop('MODAL','PARM')).
rule_i(0,prop('CTRBOX','YES')).
rule_i(0,prop('ICON','')).
rule_i(0,prop('S_TASK','YES')).
rule_i(0,prop('MINBUT','YES')).
rule_i(0,prop('MAXBUT','YES')).
rule_i(0,prop('BORSTY','2')).
rule_i(0,prop('KEY_MOREKEYS','UMPV')).
rule_i(0,prop('KEY_ENTER','UMPV')).
rule_i(0,prop('KEY_LAST','UMPV')).
rule_i(0,prop('KEY_FIRST','UMPV')).
rule_i(0,prop('KEY_SELECT','UMPV')).
rule_i(0,prop('KEY_DISPLAY','UMPV')).
rule_i(0,prop('KEY_DELETE','UMPV')).
rule_i(0,prop('KEY_CANCEL','UMPV')).
rule_i(0,prop('KEY_UPDATE','UMPV')).
rule_i(0,prop('KEY_MENU','UMPV')).
rule_i(0,prop('KEY_RETRIEVE','UMPV')).
rule_i(0,prop('KEY_NEXT','UMPV')).
rule_i(0,prop('KEY_PREVIOUS','UMPV')).
rule_i(0,prop('KEY_INSERT','UMPV')).
rule_i(0,prop('KEY_REFRESH','UMPV')).
rule_i(0,prop('KEY_PROMPT','UMPV')).
rule_i(0,prop('KEY_EXIT','UMPV')).
rule_i(0,prop('KEY_CHECK','UMPV')).
rule_i(0,prop('KEY_HELP','UMPV')).
rule_i(0,prop('ASSIGNED_FNC_KEYS','UMPV')).
rule_i(0,prop('FIRST_WD_DATEPICKER','UMPV')).
rule_i(0,prop('WNUM_DATEPICKER','UMPV')).
rule_i(0,prop(idUSE_WEB_DATEPICKER,'UMPV')).
rule_i(0,prop('FIELD_TO_FIELD','UMPV')).
rule_i(0,prop('TRNCFM','UMPV')).
rule_i(0,prop('CFMTRN','No')).
rule_i(0,prop('TRNEND','Yes')).
rule_i(0,prop('IsDwhTrn','0')).
rule_i(0,prop('AjaxRequestsSecurity','High')).
rule_i(0,prop('USE_ENCRYPTION','UMPV')).
rule_i(0,prop('SHOWMASTERPAGE_POPUP','0')).
rule_i(0,prop('MasterPage',o(13,'PromptMasterPage'))).
rule_i(0,prop('WEB_COMP','No')).
rule_i(0,prop('Theme',o(25,'Modern'))).
rule_i(0,prop('ExternalNamespace','MarianoTesis')).
rule_i(0,prop('ExternalName','THDW_REDES')).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop(idBC,'0')).
rule_i(0,prop('Folder',o(8,'Objects'))).
rule_i(0,prop('ObjDesc','Redes de una Ubicación de Hardware')).
rule_i(0,prop('ObjName','THDW_REDES')).
rule_i(39,prompt([ 39,[ [ [],306,306 ],[ [],300,300 ] ],[],[],[ t(o(13,'Gx0130'),28),t(306,2),t(',',7),t(300,2) ],[],n,[] ])).
rule_i(39,rule([ a(23,[ [ 306,300 ],[ t(o(13,'Gx0130'),28),t(306,2),t(',',7),t(300,2) ] ]) ],[],[],[ 306,300 ])).
rule_i(0,rule([ a(22,[ 'Dlt','"Eliminar"','' ]) ],[],[],[])).
rule_i(0,maingen(15)).
rule_i(0,rule([ a(10,[ 'Thdw_ubi_cod_','Red_id','Mode','Sistema','Usuario' ]) ],[],[ insert,update,delete ],[])).
rule_i(0,parmio([ [ 'Thdw_ubi_cod_',inout ],[ 'Red_id',inout ],[ 'Mode',inout ],[ 'Sistema',inout ],[ 'Usuario',inout ] ])).
rule_i(39,rule([ a(8,[ t(o(1,'PHDW_REDES'),28),t(306,2),t(',',7),t(300,2) ]) ],[ t('Mode',23),t(=,10),t('''INS''',3) ],[ insert,update,delete ],[ 306,'Mode' ])).
rule_i(39,rule([ a(3,[ t(300,2) ]) ],[],[ insert,update,delete ],[ 300 ])).
rule_i(39,rule([ a(3,[ t(306,2) ]) ],[],[ insert,update,delete ],[ 306 ])).
rule_i(39,rule([ a(1,[ t('''Debe ingresar una descripción.''',3) ]) ],[ t('trim(',1),t(301,2),t(')',4),t(=,10),t('''''',3),t('.AND.',9),t('after(',1),t(301,2),t(')',4) ],[ insert,update,delete ],[ 301 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(308,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(308,2),t(')',4) ],[ insert,update,delete ],[ 308 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(309,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(309,2),t(')',4) ],[ insert,update,delete ],[ 309 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(310,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(310,2),t(')',4) ],[ insert,update,delete ],[ 310 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(315,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(315,2),t(')',4) ],[ insert,update,delete ],[ 315 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(316,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(316,2),t(')',4) ],[ insert,update,delete ],[ 316 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(317,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(317,2),t(')',4) ],[ insert,update,delete ],[ 317 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(318,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(318,2),t(')',4) ],[ insert,update,delete ],[ 318 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(319,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(319,2),t(')',4) ],[ insert,update,delete ],[ 319 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(320,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(320,2),t(')',4) ],[ insert,update,delete ],[ 320 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(321,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(321,2),t(')',4) ],[ insert,update,delete ],[ 321 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(322,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(322,2),t(')',4) ],[ insert,update,delete ],[ 322 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(323,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(323,2),t(')',4) ],[ insert,update,delete ],[ 323 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(324,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(324,2),t(')',4) ],[ insert,update,delete ],[ 324 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(325,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(325,2),t(')',4) ],[ insert,update,delete ],[ 325 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(326,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(326,2),t(')',4) ],[ insert,update,delete ],[ 326 ])).
rule_i(39,rule([ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(327,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(327,2),t(')',4) ],[ insert,update,delete ],[ 327 ])).
rule_i(39,rule([ a(1,[ t('''La IP Desde debe ser menor que la IP hasta.''',3) ]) ],[ t('(',0),t(315,2),t(>,10),t(319,2),t(')',4),t('.AND.',9),t('after(',1),t(319,2),t(')',4) ],[ insert,update,delete ],[ 319 ])).
rule_i(39,rule([ a(19,[ [ 306 ],msg([ t('"No existe ''Ubicaciones de Redes de Hardware''."',3) ],[ t('ForeignKeyNotFound',3) ]) ]) ],[],[ insert,update,delete ],[ 306 ])).
 
a_i(1,39,f,306,[],[ [],[ t('Thdw_ubi_cod_',23),t(';',18) ] ]).
a_i(2,39,f,300,[],[ [],[ t('Red_id',23),t('IF',17),t('Mode',23),t(<>,10),t('''INS''',3),t(';',18) ] ]).
a_i(3,39,f,[ t(300,2),t('Enabled',3) ],[],[ [],[ t(0,3),t(';',18) ] ]).
a_i(4,39,f,[ t(306,2),t('Enabled',3) ],[],[ [],[ t(0,3),t(';',18) ] ]).
a_i(5,39,f,320,[],[ [ insert ],[ t('255',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(320,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(6,39,f,321,[],[ [ insert ],[ t('255',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(321,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(7,39,f,322,[],[ [ insert ],[ t('255',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(322,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(8,39,f,308,[],[ [ insert ],[ t('172',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(308,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(9,39,f,309,[],[ [ insert ],[ t('22',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(309,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(10,39,f,316,[],[ [ insert ],[ t('172',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(316,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(11,39,f,317,[],[ [ insert ],[ t('22',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(317,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(12,39,f,324,[],[ [ insert ],[ t('172',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(324,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(13,39,f,325,[],[ [ insert ],[ t('22',3),t('IF',17),t(insert,1),t('AND',9),t('null1(',1),t(325,2),t(')',4),t('AND',9),t('GxBScreen',23),t(=,10),t(0,3),t(';',18) ] ]).
a_i(14,39,b,4,[],[ [],[ a(8,[ t(o(1,'PHDW_REDES'),28),t(306,2),t(',',7),t(300,2) ]) ],[ t('Mode',23),t(=,10),t('''INS''',3) ] ]).
a_i(15,39,b,7,[],[ [],[ a(1,[ t('''Debe ingresar una descripción.''',3) ]) ],[ t('trim(',1),t(301,2),t(')',4),t(=,10),t('''''',3),t('.AND.',9),t('after(',1),t(301,2),t(')',4) ] ]).
a_i(16,39,b,8,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(308,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(308,2),t(')',4) ] ]).
a_i(17,39,b,9,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(309,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(309,2),t(')',4) ] ]).
a_i(18,39,b,10,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(310,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(310,2),t(')',4) ] ]).
a_i(19,39,b,11,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(315,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(315,2),t(')',4) ] ]).
a_i(20,39,b,12,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(316,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(316,2),t(')',4) ] ]).
a_i(21,39,b,13,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(317,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(317,2),t(')',4) ] ]).
a_i(22,39,b,14,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(318,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(318,2),t(')',4) ] ]).
a_i(23,39,b,15,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(319,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(319,2),t(')',4) ] ]).
a_i(24,39,b,16,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(320,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(320,2),t(')',4) ] ]).
a_i(25,39,b,17,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(321,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(321,2),t(')',4) ] ]).
a_i(26,39,b,18,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(322,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(322,2),t(')',4) ] ]).
a_i(27,39,b,19,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(323,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(323,2),t(')',4) ] ]).
a_i(28,39,b,20,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(324,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(324,2),t(')',4) ] ]).
a_i(29,39,b,21,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(325,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(325,2),t(')',4) ] ]).
a_i(30,39,b,22,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(326,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(326,2),t(')',4) ] ]).
a_i(31,39,b,23,[],[ [],[ a(1,[ t('''Nº inválido para dirección IP. Debe ser menor o igual a 255.''',3) ]) ],[ t(327,2),t(>,10),t('255',3),t('.AND.',9),t('after(',1),t(327,2),t(')',4) ] ]).
a_i(32,39,b,24,[],[ [],[ a(1,[ t('''La IP Desde debe ser menor que la IP hasta.''',3) ]) ],[ t('(',0),t(315,2),t(>,10),t(319,2),t(')',4),t('.AND.',9),t('after(',1),t(319,2),t(')',4) ] ]).
a_i(33,39,t,39,[],[ [ [ [],306,306 ],[ [],300,300 ] ],'ITHDW_UBICACIONES_REDES',[] ]).
a_i(34,39,r,26,[],[ [ [ 39,306,306 ] ],'ITHDW_UBICACIONES_',[] ]).
a_i(35,39,f,'GxBScreen',[],[ [],[ t('0',3) ] ]).
 
v_i(f,i,1,'Thdw_ubi_cod_').
v_i(f,o,1,306).
v_i(f,i,2,'Red_id').
v_i(f,o,2,300).
v_i(f,i,3,[]).
v_i(f,o,3,[ t(300,2),t('Enabled',3) ]).
v_i(f,i,4,[]).
v_i(f,o,4,[ t(306,2),t('Enabled',3) ]).
v_i(f,i,5,'GxBScreen').
v_i(f,o,5,320).
v_i(f,i,6,'GxBScreen').
v_i(f,o,6,321).
v_i(f,i,7,'GxBScreen').
v_i(f,o,7,322).
v_i(f,i,8,'GxBScreen').
v_i(f,o,8,308).
v_i(f,i,9,'GxBScreen').
v_i(f,o,9,309).
v_i(f,i,10,'GxBScreen').
v_i(f,o,10,316).
v_i(f,i,11,'GxBScreen').
v_i(f,o,11,317).
v_i(f,i,12,'GxBScreen').
v_i(f,o,12,324).
v_i(f,i,13,'GxBScreen').
v_i(f,o,13,325).
v_i(b,i,14,306).
v_i(b,o,14,300).
v_i(b,i,15,301).
v_i(b,o,15,[]).
v_i(b,i,16,308).
v_i(b,o,16,[]).
v_i(b,i,17,309).
v_i(b,o,17,[]).
v_i(b,i,18,310).
v_i(b,o,18,[]).
v_i(b,i,19,315).
v_i(b,o,19,[]).
v_i(b,i,20,316).
v_i(b,o,20,[]).
v_i(b,i,21,317).
v_i(b,o,21,[]).
v_i(b,i,22,318).
v_i(b,o,22,[]).
v_i(b,i,23,319).
v_i(b,o,23,[]).
v_i(b,i,24,320).
v_i(b,o,24,[]).
v_i(b,i,25,321).
v_i(b,o,25,[]).
v_i(b,i,26,322).
v_i(b,o,26,[]).
v_i(b,i,27,323).
v_i(b,o,27,[]).
v_i(b,i,28,324).
v_i(b,o,28,[]).
v_i(b,i,29,325).
v_i(b,o,29,[]).
v_i(b,i,30,326).
v_i(b,o,30,[]).
v_i(b,i,31,327).
v_i(b,o,31,[]).
v_i(b,i,32,319).
v_i(b,o,32,[]).
v_i(t,i,33,306).
v_i(t,i,33,300).
v_i(t,o,33,301).
v_i(t,o,33,308).
v_i(t,o,33,309).
v_i(t,o,33,310).
v_i(t,o,33,315).
v_i(t,o,33,316).
v_i(t,o,33,317).
v_i(t,o,33,318).
v_i(t,o,33,319).
v_i(t,o,33,320).
v_i(t,o,33,321).
v_i(t,o,33,322).
v_i(t,o,33,323).
v_i(t,o,33,324).
v_i(t,o,33,325).
v_i(t,o,33,326).
v_i(t,o,33,327).
v_i(r,i,34,306).
v_i(r,o,34,[]).
v_i(f,i,35,[]).
v_i(f,o,35,'GxBScreen').
 
ca_i(13,325).
ca_i(12,324).
ca_i(11,317).
ca_i(10,316).
ca_i(9,309).
ca_i(8,308).
ca_i(7,322).
ca_i(6,321).
ca_i(5,320).
 
 
 
 
attri_i(327,[ 'Red_PuertaEnlaceB4',int,3,0,'ZZ9',0,'Puerta de Enlace Byte 4','',0 ]).
attri_i(326,[ 'Red_PuertaEnlaceB3',int,3,0,'ZZ9',0,'Puerta de Enlace Byte 3','',0 ]).
attri_i(325,[ 'Red_PuertaEnlaceB2',int,3,0,'ZZ9',0,'Puerta de Enlace Byte 2','',0 ]).
attri_i(324,[ 'Red_PuertaEnlaceB1',int,3,0,'ZZ9',0,'Puerta de Enlace Byte 1','',0 ]).
attri_i(323,[ 'Red_MascaraB4',int,3,0,'ZZ9',0,'Máscara de Red Byte 4','',0 ]).
attri_i(322,[ 'Red_MascaraB3',int,3,0,'ZZ9',0,'Máscara de Red Byte 3','',0 ]).
attri_i(321,[ 'Red_MascaraB2',int,3,0,'ZZ9',0,'Máscara de Red Byte 2','',0 ]).
attri_i(320,[ 'Red_MascaraB1',int,3,0,'ZZ9',0,'Máscara de Red Byte 1','',0 ]).
attri_i(319,[ 'Red_DireccionHastaB4',int,3,0,'ZZ9',0,'Dirección IP Hasta Byte 4','',0 ]).
attri_i(318,[ 'Red_DireccionHastaB3',int,3,0,'ZZ9',0,'Dirección IP Hasta Byte 3','',0 ]).
attri_i(317,[ 'Red_DireccionHastaB2',int,3,0,'ZZ9',0,'Dirección IP Hasta Byte 2','',0 ]).
attri_i(316,[ 'Red_DireccionHastaB1',int,3,0,'ZZ9',0,'Dirección IP Hasta Byte 1','',0 ]).
attri_i(315,[ 'Red_DireccionDesdeB4',int,3,0,'ZZ9',0,'Dirección IP Desde Byte 4','',0 ]).
attri_i(310,[ 'Red_DireccionDesdeB3',int,3,0,'ZZ9',0,'Dirección IP Desde Byte 3','',0 ]).
attri_i(309,[ 'Red_DireccionDesdeB2',int,3,0,'ZZ9',0,'Dirección IP Desde Byte 2','',0 ]).
attri_i(308,[ 'Red_DireccionDesdeB1',int,3,0,'ZZ9',0,'Dirección IP Desde Byte 1','',0 ]).
attri_i(301,[ 'Red_Descripcion',char,30,0,'',0,'Descripción de Red','',0 ]).
attri_i(300,[ 'Red_Id',int,10,0,'ZZZZZZZZZ9',0,'Id de Red','',0 ]).
attri_i(306,[ 'THDW_UBI_COD_',int,10,0,'ZZZZZZZZZ9',0,'Código de Ubicación de Red','',0 ]).
attri_i('GxBScreen',[ 'Gx_BScreen',int,1,0,'',0,'','',11 ]).
attri_i('Gxremove',[ 'GxRemove',int,1,0,'9',0,'Gx Remove','',5 ]).
attri_i('Red_id',[ 'Red_Id',int,10,0,'ZZZZZZZZZ9',0,'Red_ Id','',10 ]).
attri_i('Usuario',[ 'USUARIO',char,16,0,'',0,'USUARIO','',9 ]).
attri_i('Sistema',[ 'SISTEMA',char,15,0,'',0,'SISTEMA','',8 ]).
attri_i('Thdw_ubi_cod_',[ 'THDW_UBI_COD_',int,10,0,'ZZZZZZZZZ9',0,'THDW_ UBI_ COD_','',7 ]).
attri_i('Mode',[ 'Gx_mode',char,3,0,'@!',1,'','',2 ]).
 
table_i(26,[ 'THDW_UBICACIONES_',[ 306 ],'Ubicaciones de Redes de Hardware','THDW_UBICACIONES_' ]).
table_i(39,[ 'THDW_REDES',[ 306,300,301,308,309,310,315,316,317,318,319,320,321,322,323,324,325,326,327 ],'REDES','THDW_REDES' ]).
 
index_i(39,[ 'ITHDW_UBICACIONES_REDES',u,[ 306,300 ],'ITHDW_UBICACIONES_REDES' ]).
index_i(26,[ 'ITHDW_UBICACIONES_',u,[ 306 ],'ITHDW_UBICACIONES_' ]).
 
 
 
 
 
 
 
 
 
 
upd_i(39,39,i,[ [ 300,301,308,309,310,315,316,317,318,319,320,321,322,323,324,325,326,327,306 ],[],'ITHDW_UBICACIONES_REDES',[ [ [],306,306 ],[ [],300,300 ] ] ]).
upd_i(39,39,u,[ [ 301,308,309,310,315,316,317,318,319,320,321,322,323,324,325,326,327 ],[],'ITHDW_UBICACIONES_REDES',[] ]).
upd_i(39,39,d,[ [],[],'ITHDW_UBICACIONES_REDES',[] ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
break_i(2,nvg,1,[],[ [ 306 ],[],[] ]).
 
b_group_i(2,1,lit,0,1,1).
b_group_i(2,2,lit,0,2,0).
 
b_line_i(1,2,1,cmd,1,[ t('',146,1,0),t('After Trn',3,1,7) ]).
b_line_i(2,2,2,cmd,1,[ t('',109,1,0),t('Mode',23,1,5),t(=,10,1,11),t('''INS''',3,2,13) ]).
b_line_i(4,2,2,cmd,1,[ t('',104,1,0),t(o(1,'PHDW_IP'),28,1,3),t(306,2,1,17) ]).
b_line_i(5,2,2,cmd,1,[ t('',111,1,0) ]).
b_line_i(6,2,2,cmd,1,[ t('',147,1,0) ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
html_i(2,table(2)).
 
html_sub_i(2,0,html_i(0,html('<TBODY>'))).
html_sub_i(2,3,html_i(1,row(3))).
html_sub_i(3,4,html_i(0,cell(4))).
html_sub_i(4,5,html_i(0,table(5))).
html_sub_i(5,0,html_i(0,html('<TBODY>'))).
html_sub_i(5,6,html_i(1,row(6))).
html_sub_i(6,7,html_i(0,cell(7))).
html_sub_i(7,0,html_i(0,html('<DIV style="WHITE-SPACE: nowrap" class="ToolbarMain"/>'))).
html_sub_i(5,0,html_i(2,html('</TBODY>'))).
html_sub_i(4,8,html_i(1,group(8))).
html_sub_i(8,9,html_i(0,table(9))).
html_sub_i(9,0,html_i(0,html('<TBODY>'))).
html_sub_i(9,10,html_i(1,row(10))).
html_sub_i(10,11,html_i(0,cell(11))).
html_sub_i(11,12,html_i(0,comp(errview))).
html_sub_i(9,13,html_i(2,row(13))).
html_sub_i(13,14,html_i(0,cell(14))).
html_sub_i(14,15,html_i(0,table(15))).
html_sub_i(15,0,html_i(0,html('<TBODY>'))).
html_sub_i(15,16,html_i(1,row(16))).
html_sub_i(16,17,html_i(0,cell(17))).
html_sub_i(17,18,html_i(0,t('Ubicación:',3))).
html_sub_i(16,19,html_i(1,cell(19))).
html_sub_i(19,20,html_i(0,t(306,2))).
html_sub_i(15,21,html_i(2,row(21))).
html_sub_i(21,22,html_i(0,cell(22))).
html_sub_i(22,23,html_i(0,t('Cód. de Red:',3))).
html_sub_i(21,24,html_i(1,cell(24))).
html_sub_i(24,25,html_i(0,t(300,2))).
html_sub_i(15,26,html_i(3,row(26))).
html_sub_i(26,27,html_i(0,cell(27))).
html_sub_i(27,28,html_i(0,t('Descripción:',3))).
html_sub_i(26,29,html_i(1,cell(29))).
html_sub_i(29,30,html_i(0,t(301,2))).
html_sub_i(15,31,html_i(4,row(31))).
html_sub_i(31,32,html_i(0,cell(32))).
html_sub_i(32,33,html_i(0,t('Dir. IP Desde:',3))).
html_sub_i(31,34,html_i(1,cell(34))).
html_sub_i(34,35,html_i(0,t(308,2))).
html_sub_i(34,0,html_i(1,html('.'))).
html_sub_i(34,36,html_i(2,t(309,2))).
html_sub_i(34,0,html_i(3,html('.'))).
html_sub_i(34,37,html_i(4,t(310,2))).
html_sub_i(34,0,html_i(5,html('.'))).
html_sub_i(34,38,html_i(6,t(315,2))).
html_sub_i(15,39,html_i(5,row(39))).
html_sub_i(39,40,html_i(0,cell(40))).
html_sub_i(40,41,html_i(0,t('Dir. IP Hasta:',3))).
html_sub_i(39,42,html_i(1,cell(42))).
html_sub_i(42,43,html_i(0,t(316,2))).
html_sub_i(42,0,html_i(1,html('.'))).
html_sub_i(42,44,html_i(2,t(317,2))).
html_sub_i(42,0,html_i(3,html('.'))).
html_sub_i(42,45,html_i(4,t(318,2))).
html_sub_i(42,0,html_i(5,html('.'))).
html_sub_i(42,46,html_i(6,t(319,2))).
html_sub_i(15,47,html_i(6,row(47))).
html_sub_i(47,48,html_i(0,cell(48))).
html_sub_i(48,49,html_i(0,t('Máscara de Red:',3))).
html_sub_i(47,50,html_i(1,cell(50))).
html_sub_i(50,51,html_i(0,t(320,2))).
html_sub_i(50,0,html_i(1,html('.'))).
html_sub_i(50,52,html_i(2,t(321,2))).
html_sub_i(50,0,html_i(3,html('.'))).
html_sub_i(50,53,html_i(4,t(322,2))).
html_sub_i(50,0,html_i(5,html('.'))).
html_sub_i(50,54,html_i(6,t(323,2))).
html_sub_i(15,55,html_i(7,row(55))).
html_sub_i(55,56,html_i(0,cell(56))).
html_sub_i(56,57,html_i(0,t('Puerta de Enlace:',3))).
html_sub_i(55,58,html_i(1,cell(58))).
html_sub_i(58,59,html_i(0,t(324,2))).
html_sub_i(58,0,html_i(1,html('.'))).
html_sub_i(58,60,html_i(2,t(325,2))).
html_sub_i(58,0,html_i(3,html('.'))).
html_sub_i(58,61,html_i(4,t(326,2))).
html_sub_i(58,0,html_i(5,html('.'))).
html_sub_i(58,62,html_i(6,t(327,2))).
html_sub_i(15,0,html_i(8,html('</TBODY>'))).
html_sub_i(9,63,html_i(3,row(63))).
html_sub_i(63,64,html_i(0,cell(64))).
html_sub_i(64,65,html_i(0,button('Delete'))).
html_sub_i(64,66,html_i(1,button('Cancel'))).
html_sub_i(64,67,html_i(2,button('Enter'))).
html_sub_i(9,0,html_i(4,html('</TBODY>'))).
html_sub_i(2,0,html_i(2,html('</TBODY>'))).
 
html_tags_i(1,'Class','Form').
 
html_comp_i(12,'Backcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(2,'Id','Tablemain',v,[ str ]).
html_comp_i(2,'Class','TableBorder100x100',v,[ str ]).
html_comp_i(2,'Title','',d,[ str ]).
html_comp_i(2,'Align',left,d,[ str ]).
html_comp_i(2,'Backgroundgx','',d,[ str ]).
html_comp_i(2,'Bgcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(2,'Border','0',d,[ str ]).
html_comp_i(2,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(2,'Cellpadding','1',d,[ str ]).
html_comp_i(2,'Cellspacing','2',d,[ str ]).
html_comp_i(2,'Height',measure(270,px),v,[ measure ]).
html_comp_i(2,'Width',measure(473,px),v,[ measure ]).
html_comp_i(2,'Rules',none,d,[ str ]).
html_comp_i(5,'Id','Tabletoolbar',v,[ str ]).
html_comp_i(5,'Class','ViewTable',v,[ str ]).
html_comp_i(5,'Title','',d,[ str ]).
html_comp_i(5,'Align',left,d,[ str ]).
html_comp_i(5,'Backgroundgx','',d,[ str ]).
html_comp_i(5,'Bgcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(5,'Border','0',d,[ str ]).
html_comp_i(5,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(5,'Cellpadding','1',d,[ str ]).
html_comp_i(5,'Cellspacing','2',d,[ str ]).
html_comp_i(5,'Height',measure(0,px),d,[ measure ]).
html_comp_i(5,'Width',measure(0,px),d,[ measure ]).
html_comp_i(5,'Rules',none,d,[ str ]).
html_comp_i(8,'Class','Group',v,[ str ]).
html_comp_i(8,'Caption','Redes de una Ubicación',d,[ str ]).
html_comp_i(8,'Id','Groupdata',v,[ str ]).
html_comp_i(8,'Height',measure(0,px),d,[ measure ]).
html_comp_i(8,'Width',measure(0,px),d,[ measure ]).
html_comp_i(9,'Id','Table1',v,[ str ]).
html_comp_i(9,'Class','Table',v,[ str ]).
html_comp_i(9,'Title','',d,[ str ]).
html_comp_i(9,'Align',left,d,[ str ]).
html_comp_i(9,'Backgroundgx','',d,[ str ]).
html_comp_i(9,'Bgcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(9,'Border','0',d,[ str ]).
html_comp_i(9,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(9,'Cellpadding','1',d,[ str ]).
html_comp_i(9,'Cellspacing','2',d,[ str ]).
html_comp_i(9,'Height',measure(155,px),v,[ measure ]).
html_comp_i(9,'Width',measure(457,px),v,[ measure ]).
html_comp_i(9,'Rules',none,d,[ str ]).
html_comp_i(12,'Controlname','Ctlerror',v,[ str ]).
html_comp_i(12,'Class','ErrorViewer',d,[ str ]).
html_comp_i(12,'Displaymode',1,d,[ num ]).
html_comp_i(12,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(12,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(12,'Fill',-1,d,[ bool ]).
html_comp_i(15,'Id','Table2',v,[ str ]).
html_comp_i(15,'Class','Table',v,[ str ]).
html_comp_i(15,'Title','',d,[ str ]).
html_comp_i(15,'Align',left,d,[ str ]).
html_comp_i(15,'Backgroundgx','',d,[ str ]).
html_comp_i(15,'Bgcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(15,'Border','0',d,[ str ]).
html_comp_i(15,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(15,'Cellpadding','1',d,[ str ]).
html_comp_i(15,'Cellspacing','2',d,[ str ]).
html_comp_i(15,'Height',measure(0,px),d,[ measure ]).
html_comp_i(15,'Width',measure(0,px),d,[ measure ]).
html_comp_i(15,'Rules',none,d,[ str ]).
html_comp_i(17,'Valign',top,v,[ str ]).
html_comp_i(17,'Class',td5,v,[ str ]).
html_comp_i(18,'Caption','Ubicación:',d,[ str ]).
html_comp_i(18,'Id','Textblockthdw_ubi_cod_',v,[ str ]).
html_comp_i(18,'Class','TextBlock',d,[ str ]).
html_comp_i(18,'Event','',d,[ str ]).
html_comp_i(18,'Returnonclick',0,d,[ bool ]).
html_comp_i(18,'Gxformat',0,d,[ num ]).
html_comp_i(18,'Title','',d,[ str ]).
html_comp_i(18,'Fill',-1,d,[ bool ]).
html_comp_i(18,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(18,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(18,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(20,'Attid',306,v,[ num ]).
html_comp_i(20,'Class','Attribute',d,[ str ]).
html_comp_i(20,'Controlname','Thdw_ubi_cod_',d,[ str ]).
html_comp_i(20,'Returnonclick',0,d,[ bool ]).
html_comp_i(20,'Controltype',2,d,[ num ]).
html_comp_i(20,'Inputtype',0,d,[ num ]).
html_comp_i(20,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(20,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(20,'Readonly',0,d,[ bool ]).
html_comp_i(20,'Autocomplete',-1,d,[ bool ]).
html_comp_i(20,'Ispassword',0,d,[ bool ]).
html_comp_i(20,'Autoresize',-1,d,[ bool ]).
html_comp_i(20,'Gxwidth',measure(10,chr),d,[ measure ]).
html_comp_i(20,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(20,'Ismultiline',0,d,[ bool ]).
html_comp_i(20,'Fill',-1,d,[ bool ]).
html_comp_i(20,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(20,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(20,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(20,'Horizontalalignment',right,d,[ str ]).
html_comp_i(20,'Gxformat',0,d,[ num ]).
html_comp_i(20,'Title','',d,[ str ]).
html_comp_i(22,'Valign',top,v,[ str ]).
html_comp_i(22,'Class',td5,v,[ str ]).
html_comp_i(23,'Caption','Cód. de Red:',d,[ str ]).
html_comp_i(23,'Id','Textblockred_id',v,[ str ]).
html_comp_i(23,'Class','TextBlock',d,[ str ]).
html_comp_i(23,'Event','',d,[ str ]).
html_comp_i(23,'Returnonclick',0,d,[ bool ]).
html_comp_i(23,'Gxformat',0,d,[ num ]).
html_comp_i(23,'Title','',d,[ str ]).
html_comp_i(23,'Fill',-1,d,[ bool ]).
html_comp_i(23,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(23,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(23,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(25,'Attid',300,v,[ num ]).
html_comp_i(25,'Class','Attribute',d,[ str ]).
html_comp_i(25,'Controlname','Red_id',d,[ str ]).
html_comp_i(25,'Returnonclick',0,d,[ bool ]).
html_comp_i(25,'Controltype',2,d,[ num ]).
html_comp_i(25,'Inputtype',0,d,[ num ]).
html_comp_i(25,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(25,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(25,'Readonly',0,d,[ bool ]).
html_comp_i(25,'Autocomplete',-1,d,[ bool ]).
html_comp_i(25,'Ispassword',0,d,[ bool ]).
html_comp_i(25,'Autoresize',-1,d,[ bool ]).
html_comp_i(25,'Gxwidth',measure(10,chr),d,[ measure ]).
html_comp_i(25,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(25,'Ismultiline',0,d,[ bool ]).
html_comp_i(25,'Fill',-1,d,[ bool ]).
html_comp_i(25,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(25,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(25,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(25,'Horizontalalignment',right,d,[ str ]).
html_comp_i(25,'Gxformat',0,d,[ num ]).
html_comp_i(25,'Title','',d,[ str ]).
html_comp_i(27,'Valign',top,v,[ str ]).
html_comp_i(27,'Class',td5,v,[ str ]).
html_comp_i(28,'Caption','Descripción:',d,[ str ]).
html_comp_i(28,'Id','Textblockred_descripcion',v,[ str ]).
html_comp_i(28,'Class','TextBlock',d,[ str ]).
html_comp_i(28,'Event','',d,[ str ]).
html_comp_i(28,'Returnonclick',0,d,[ bool ]).
html_comp_i(28,'Gxformat',0,d,[ num ]).
html_comp_i(28,'Title','',d,[ str ]).
html_comp_i(28,'Fill',-1,d,[ bool ]).
html_comp_i(28,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(28,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(28,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(30,'Attid',301,v,[ num ]).
html_comp_i(30,'Class','Attribute',d,[ str ]).
html_comp_i(30,'Controlname','Red_descripcion',d,[ str ]).
html_comp_i(30,'Returnonclick',0,d,[ bool ]).
html_comp_i(30,'Controltype',2,d,[ num ]).
html_comp_i(30,'Inputtype',0,d,[ num ]).
html_comp_i(30,'Editautocomplete',0,d,[ num ]).
html_comp_i(30,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(30,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(30,'Readonly',0,d,[ bool ]).
html_comp_i(30,'Autocomplete',-1,d,[ bool ]).
html_comp_i(30,'Ispassword',0,d,[ bool ]).
html_comp_i(30,'Autoresize',-1,d,[ bool ]).
html_comp_i(30,'Gxwidth',measure(30,chr),d,[ measure ]).
html_comp_i(30,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(30,'Ismultiline',0,d,[ bool ]).
html_comp_i(30,'Fill',-1,d,[ bool ]).
html_comp_i(30,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(30,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(30,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(30,'Horizontalalignment',left,d,[ str ]).
html_comp_i(30,'Gxformat',0,d,[ num ]).
html_comp_i(30,'Title','',d,[ str ]).
html_comp_i(32,'Valign',top,v,[ str ]).
html_comp_i(32,'Class',td5,v,[ str ]).
html_comp_i(33,'Caption','Dir. IP Desde:',d,[ str ]).
html_comp_i(33,'Id','Textblockred_direcciondesdeb1',v,[ str ]).
html_comp_i(33,'Class','TextBlock',d,[ str ]).
html_comp_i(33,'Event','',d,[ str ]).
html_comp_i(33,'Returnonclick',0,d,[ bool ]).
html_comp_i(33,'Gxformat',0,d,[ num ]).
html_comp_i(33,'Title','',d,[ str ]).
html_comp_i(33,'Fill',-1,d,[ bool ]).
html_comp_i(33,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(33,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(33,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(35,'Attid',308,v,[ num ]).
html_comp_i(35,'Class','Attribute',d,[ str ]).
html_comp_i(35,'Controlname','Red_direcciondesdeb1',d,[ str ]).
html_comp_i(35,'Returnonclick',0,d,[ bool ]).
html_comp_i(35,'Controltype',2,d,[ num ]).
html_comp_i(35,'Inputtype',0,d,[ num ]).
html_comp_i(35,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(35,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(35,'Readonly',0,d,[ bool ]).
html_comp_i(35,'Autocomplete',-1,d,[ bool ]).
html_comp_i(35,'Ispassword',0,d,[ bool ]).
html_comp_i(35,'Autoresize',-1,d,[ bool ]).
html_comp_i(35,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(35,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(35,'Ismultiline',0,d,[ bool ]).
html_comp_i(35,'Fill',-1,d,[ bool ]).
html_comp_i(35,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(35,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(35,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(35,'Horizontalalignment',right,d,[ str ]).
html_comp_i(35,'Gxformat',0,d,[ num ]).
html_comp_i(35,'Title','',d,[ str ]).
html_comp_i(36,'Attid',309,v,[ num ]).
html_comp_i(36,'Class','Attribute',d,[ str ]).
html_comp_i(36,'Controlname','Red_direcciondesdeb2',d,[ str ]).
html_comp_i(36,'Returnonclick',0,d,[ bool ]).
html_comp_i(36,'Controltype',2,d,[ num ]).
html_comp_i(36,'Inputtype',0,d,[ num ]).
html_comp_i(36,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(36,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(36,'Readonly',0,d,[ bool ]).
html_comp_i(36,'Autocomplete',-1,d,[ bool ]).
html_comp_i(36,'Ispassword',0,d,[ bool ]).
html_comp_i(36,'Autoresize',-1,d,[ bool ]).
html_comp_i(36,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(36,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(36,'Ismultiline',0,d,[ bool ]).
html_comp_i(36,'Fill',-1,d,[ bool ]).
html_comp_i(36,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(36,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(36,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(36,'Horizontalalignment',right,d,[ str ]).
html_comp_i(36,'Gxformat',0,d,[ num ]).
html_comp_i(36,'Title','',d,[ str ]).
html_comp_i(37,'Attid',310,v,[ num ]).
html_comp_i(37,'Class','Attribute',d,[ str ]).
html_comp_i(37,'Controlname','Red_direcciondesdeb3',d,[ str ]).
html_comp_i(37,'Returnonclick',0,d,[ bool ]).
html_comp_i(37,'Controltype',2,d,[ num ]).
html_comp_i(37,'Inputtype',0,d,[ num ]).
html_comp_i(37,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(37,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(37,'Readonly',0,d,[ bool ]).
html_comp_i(37,'Autocomplete',-1,d,[ bool ]).
html_comp_i(37,'Ispassword',0,d,[ bool ]).
html_comp_i(37,'Autoresize',-1,d,[ bool ]).
html_comp_i(37,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(37,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(37,'Ismultiline',0,d,[ bool ]).
html_comp_i(37,'Fill',-1,d,[ bool ]).
html_comp_i(37,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(37,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(37,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(37,'Horizontalalignment',right,d,[ str ]).
html_comp_i(37,'Gxformat',0,d,[ num ]).
html_comp_i(37,'Title','',d,[ str ]).
html_comp_i(38,'Attid',315,v,[ num ]).
html_comp_i(38,'Class','Attribute',d,[ str ]).
html_comp_i(38,'Controlname','Red_direcciondesdeb4',d,[ str ]).
html_comp_i(38,'Returnonclick',0,d,[ bool ]).
html_comp_i(38,'Controltype',2,d,[ num ]).
html_comp_i(38,'Inputtype',0,d,[ num ]).
html_comp_i(38,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(38,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(38,'Readonly',0,d,[ bool ]).
html_comp_i(38,'Autocomplete',-1,d,[ bool ]).
html_comp_i(38,'Ispassword',0,d,[ bool ]).
html_comp_i(38,'Autoresize',-1,d,[ bool ]).
html_comp_i(38,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(38,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(38,'Ismultiline',0,d,[ bool ]).
html_comp_i(38,'Fill',-1,d,[ bool ]).
html_comp_i(38,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(38,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(38,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(38,'Horizontalalignment',right,d,[ str ]).
html_comp_i(38,'Gxformat',0,d,[ num ]).
html_comp_i(38,'Title','',d,[ str ]).
html_comp_i(40,'Valign',top,v,[ str ]).
html_comp_i(40,'Class',td5,v,[ str ]).
html_comp_i(41,'Caption','Dir. IP Hasta:',d,[ str ]).
html_comp_i(41,'Id','Textblockred_direccionhastab1',v,[ str ]).
html_comp_i(41,'Class','TextBlock',d,[ str ]).
html_comp_i(41,'Event','',d,[ str ]).
html_comp_i(41,'Returnonclick',0,d,[ bool ]).
html_comp_i(41,'Gxformat',0,d,[ num ]).
html_comp_i(41,'Title','',d,[ str ]).
html_comp_i(41,'Fill',-1,d,[ bool ]).
html_comp_i(41,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(41,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(41,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(43,'Attid',316,v,[ num ]).
html_comp_i(43,'Class','Attribute',d,[ str ]).
html_comp_i(43,'Controlname','Red_direccionhastab1',d,[ str ]).
html_comp_i(43,'Returnonclick',0,d,[ bool ]).
html_comp_i(43,'Controltype',2,d,[ num ]).
html_comp_i(43,'Inputtype',0,d,[ num ]).
html_comp_i(43,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(43,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(43,'Readonly',0,d,[ bool ]).
html_comp_i(43,'Autocomplete',-1,d,[ bool ]).
html_comp_i(43,'Ispassword',0,d,[ bool ]).
html_comp_i(43,'Autoresize',-1,d,[ bool ]).
html_comp_i(43,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(43,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(43,'Ismultiline',0,d,[ bool ]).
html_comp_i(43,'Fill',-1,d,[ bool ]).
html_comp_i(43,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(43,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(43,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(43,'Horizontalalignment',right,d,[ str ]).
html_comp_i(43,'Gxformat',0,d,[ num ]).
html_comp_i(43,'Title','',d,[ str ]).
html_comp_i(44,'Attid',317,v,[ num ]).
html_comp_i(44,'Class','Attribute',d,[ str ]).
html_comp_i(44,'Controlname','Red_direccionhastab2',d,[ str ]).
html_comp_i(44,'Returnonclick',0,d,[ bool ]).
html_comp_i(44,'Controltype',2,d,[ num ]).
html_comp_i(44,'Inputtype',0,d,[ num ]).
html_comp_i(44,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(44,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(44,'Readonly',0,d,[ bool ]).
html_comp_i(44,'Autocomplete',-1,d,[ bool ]).
html_comp_i(44,'Ispassword',0,d,[ bool ]).
html_comp_i(44,'Autoresize',-1,d,[ bool ]).
html_comp_i(44,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(44,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(44,'Ismultiline',0,d,[ bool ]).
html_comp_i(44,'Fill',-1,d,[ bool ]).
html_comp_i(44,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(44,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(44,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(44,'Horizontalalignment',right,d,[ str ]).
html_comp_i(44,'Gxformat',0,d,[ num ]).
html_comp_i(44,'Title','',d,[ str ]).
html_comp_i(45,'Attid',318,v,[ num ]).
html_comp_i(45,'Class','Attribute',d,[ str ]).
html_comp_i(45,'Controlname','Red_direccionhastab3',d,[ str ]).
html_comp_i(45,'Returnonclick',0,d,[ bool ]).
html_comp_i(45,'Controltype',2,d,[ num ]).
html_comp_i(45,'Inputtype',0,d,[ num ]).
html_comp_i(45,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(45,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(45,'Readonly',0,d,[ bool ]).
html_comp_i(45,'Autocomplete',-1,d,[ bool ]).
html_comp_i(45,'Ispassword',0,d,[ bool ]).
html_comp_i(45,'Autoresize',-1,d,[ bool ]).
html_comp_i(45,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(45,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(45,'Ismultiline',0,d,[ bool ]).
html_comp_i(45,'Fill',-1,d,[ bool ]).
html_comp_i(45,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(45,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(45,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(45,'Horizontalalignment',right,d,[ str ]).
html_comp_i(45,'Gxformat',0,d,[ num ]).
html_comp_i(45,'Title','',d,[ str ]).
html_comp_i(46,'Attid',319,v,[ num ]).
html_comp_i(46,'Class','Attribute',d,[ str ]).
html_comp_i(46,'Controlname','Red_direccionhastab4',d,[ str ]).
html_comp_i(46,'Returnonclick',0,d,[ bool ]).
html_comp_i(46,'Controltype',2,d,[ num ]).
html_comp_i(46,'Inputtype',0,d,[ num ]).
html_comp_i(46,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(46,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(46,'Readonly',0,d,[ bool ]).
html_comp_i(46,'Autocomplete',-1,d,[ bool ]).
html_comp_i(46,'Ispassword',0,d,[ bool ]).
html_comp_i(46,'Autoresize',-1,d,[ bool ]).
html_comp_i(46,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(46,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(46,'Ismultiline',0,d,[ bool ]).
html_comp_i(46,'Fill',-1,d,[ bool ]).
html_comp_i(46,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(46,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(46,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(46,'Horizontalalignment',right,d,[ str ]).
html_comp_i(46,'Gxformat',0,d,[ num ]).
html_comp_i(46,'Title','',d,[ str ]).
html_comp_i(48,'Valign',top,v,[ str ]).
html_comp_i(48,'Class',td5,v,[ str ]).
html_comp_i(49,'Caption','Máscara de Red:',d,[ str ]).
html_comp_i(49,'Id','Textblockred_mascarab1',v,[ str ]).
html_comp_i(49,'Class','TextBlock',d,[ str ]).
html_comp_i(49,'Event','',d,[ str ]).
html_comp_i(49,'Returnonclick',0,d,[ bool ]).
html_comp_i(49,'Gxformat',0,d,[ num ]).
html_comp_i(49,'Title','',d,[ str ]).
html_comp_i(49,'Fill',-1,d,[ bool ]).
html_comp_i(49,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(49,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(49,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(51,'Attid',320,v,[ num ]).
html_comp_i(51,'Class','Attribute',d,[ str ]).
html_comp_i(51,'Controlname','Red_mascarab1',d,[ str ]).
html_comp_i(51,'Returnonclick',0,d,[ bool ]).
html_comp_i(51,'Controltype',2,d,[ num ]).
html_comp_i(51,'Inputtype',0,d,[ num ]).
html_comp_i(51,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(51,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(51,'Readonly',0,d,[ bool ]).
html_comp_i(51,'Autocomplete',-1,d,[ bool ]).
html_comp_i(51,'Ispassword',0,d,[ bool ]).
html_comp_i(51,'Autoresize',-1,d,[ bool ]).
html_comp_i(51,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(51,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(51,'Ismultiline',0,d,[ bool ]).
html_comp_i(51,'Fill',-1,d,[ bool ]).
html_comp_i(51,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(51,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(51,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(51,'Horizontalalignment',right,d,[ str ]).
html_comp_i(51,'Gxformat',0,d,[ num ]).
html_comp_i(51,'Title','',d,[ str ]).
html_comp_i(52,'Attid',321,v,[ num ]).
html_comp_i(52,'Class','Attribute',d,[ str ]).
html_comp_i(52,'Controlname','Red_mascarab2',d,[ str ]).
html_comp_i(52,'Returnonclick',0,d,[ bool ]).
html_comp_i(52,'Controltype',2,d,[ num ]).
html_comp_i(52,'Inputtype',0,d,[ num ]).
html_comp_i(52,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(52,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(52,'Readonly',0,d,[ bool ]).
html_comp_i(52,'Autocomplete',-1,d,[ bool ]).
html_comp_i(52,'Ispassword',0,d,[ bool ]).
html_comp_i(52,'Autoresize',-1,d,[ bool ]).
html_comp_i(52,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(52,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(52,'Ismultiline',0,d,[ bool ]).
html_comp_i(52,'Fill',-1,d,[ bool ]).
html_comp_i(52,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(52,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(52,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(52,'Horizontalalignment',right,d,[ str ]).
html_comp_i(52,'Gxformat',0,d,[ num ]).
html_comp_i(52,'Title','',d,[ str ]).
html_comp_i(53,'Attid',322,v,[ num ]).
html_comp_i(53,'Class','Attribute',d,[ str ]).
html_comp_i(53,'Controlname','Red_mascarab3',d,[ str ]).
html_comp_i(53,'Returnonclick',0,d,[ bool ]).
html_comp_i(53,'Controltype',2,d,[ num ]).
html_comp_i(53,'Inputtype',0,d,[ num ]).
html_comp_i(53,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(53,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(53,'Readonly',0,d,[ bool ]).
html_comp_i(53,'Autocomplete',-1,d,[ bool ]).
html_comp_i(53,'Ispassword',0,d,[ bool ]).
html_comp_i(53,'Autoresize',-1,d,[ bool ]).
html_comp_i(53,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(53,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(53,'Ismultiline',0,d,[ bool ]).
html_comp_i(53,'Fill',-1,d,[ bool ]).
html_comp_i(53,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(53,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(53,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(53,'Horizontalalignment',right,d,[ str ]).
html_comp_i(53,'Gxformat',0,d,[ num ]).
html_comp_i(53,'Title','',d,[ str ]).
html_comp_i(54,'Attid',323,v,[ num ]).
html_comp_i(54,'Class','Attribute',d,[ str ]).
html_comp_i(54,'Controlname','Red_mascarab4',d,[ str ]).
html_comp_i(54,'Returnonclick',0,d,[ bool ]).
html_comp_i(54,'Controltype',2,d,[ num ]).
html_comp_i(54,'Inputtype',0,d,[ num ]).
html_comp_i(54,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(54,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(54,'Readonly',0,d,[ bool ]).
html_comp_i(54,'Autocomplete',-1,d,[ bool ]).
html_comp_i(54,'Ispassword',0,d,[ bool ]).
html_comp_i(54,'Autoresize',-1,d,[ bool ]).
html_comp_i(54,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(54,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(54,'Ismultiline',0,d,[ bool ]).
html_comp_i(54,'Fill',-1,d,[ bool ]).
html_comp_i(54,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(54,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(54,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(54,'Horizontalalignment',right,d,[ str ]).
html_comp_i(54,'Gxformat',0,d,[ num ]).
html_comp_i(54,'Title','',d,[ str ]).
html_comp_i(56,'Valign',top,v,[ str ]).
html_comp_i(56,'Class',td5,v,[ str ]).
html_comp_i(57,'Caption','Puerta de Enlace:',d,[ str ]).
html_comp_i(57,'Id','Textblockred_puertaenlaceb1',v,[ str ]).
html_comp_i(57,'Class','TextBlock',d,[ str ]).
html_comp_i(57,'Event','',d,[ str ]).
html_comp_i(57,'Returnonclick',0,d,[ bool ]).
html_comp_i(57,'Gxformat',0,d,[ num ]).
html_comp_i(57,'Title','',d,[ str ]).
html_comp_i(57,'Fill',-1,d,[ bool ]).
html_comp_i(57,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(57,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(57,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(59,'Attid',324,v,[ num ]).
html_comp_i(59,'Class','Attribute',d,[ str ]).
html_comp_i(59,'Controlname','Red_puertaenlaceb1',d,[ str ]).
html_comp_i(59,'Returnonclick',0,d,[ bool ]).
html_comp_i(59,'Controltype',2,d,[ num ]).
html_comp_i(59,'Inputtype',0,d,[ num ]).
html_comp_i(59,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(59,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(59,'Readonly',0,d,[ bool ]).
html_comp_i(59,'Autocomplete',-1,d,[ bool ]).
html_comp_i(59,'Ispassword',0,d,[ bool ]).
html_comp_i(59,'Autoresize',-1,d,[ bool ]).
html_comp_i(59,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(59,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(59,'Ismultiline',0,d,[ bool ]).
html_comp_i(59,'Fill',-1,d,[ bool ]).
html_comp_i(59,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(59,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(59,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(59,'Horizontalalignment',right,d,[ str ]).
html_comp_i(59,'Gxformat',0,d,[ num ]).
html_comp_i(59,'Title','',d,[ str ]).
html_comp_i(60,'Attid',325,v,[ num ]).
html_comp_i(60,'Class','Attribute',d,[ str ]).
html_comp_i(60,'Controlname','Red_puertaenlaceb2',d,[ str ]).
html_comp_i(60,'Returnonclick',0,d,[ bool ]).
html_comp_i(60,'Controltype',2,d,[ num ]).
html_comp_i(60,'Inputtype',0,d,[ num ]).
html_comp_i(60,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(60,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(60,'Readonly',0,d,[ bool ]).
html_comp_i(60,'Autocomplete',-1,d,[ bool ]).
html_comp_i(60,'Ispassword',0,d,[ bool ]).
html_comp_i(60,'Autoresize',-1,d,[ bool ]).
html_comp_i(60,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(60,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(60,'Ismultiline',0,d,[ bool ]).
html_comp_i(60,'Fill',-1,d,[ bool ]).
html_comp_i(60,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(60,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(60,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(60,'Horizontalalignment',right,d,[ str ]).
html_comp_i(60,'Gxformat',0,d,[ num ]).
html_comp_i(60,'Title','',d,[ str ]).
html_comp_i(61,'Attid',326,v,[ num ]).
html_comp_i(61,'Class','Attribute',d,[ str ]).
html_comp_i(61,'Controlname','Red_puertaenlaceb3',d,[ str ]).
html_comp_i(61,'Returnonclick',0,d,[ bool ]).
html_comp_i(61,'Controltype',2,d,[ num ]).
html_comp_i(61,'Inputtype',0,d,[ num ]).
html_comp_i(61,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(61,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(61,'Readonly',0,d,[ bool ]).
html_comp_i(61,'Autocomplete',-1,d,[ bool ]).
html_comp_i(61,'Ispassword',0,d,[ bool ]).
html_comp_i(61,'Autoresize',-1,d,[ bool ]).
html_comp_i(61,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(61,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(61,'Ismultiline',0,d,[ bool ]).
html_comp_i(61,'Fill',-1,d,[ bool ]).
html_comp_i(61,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(61,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(61,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(61,'Horizontalalignment',right,d,[ str ]).
html_comp_i(61,'Gxformat',0,d,[ num ]).
html_comp_i(61,'Title','',d,[ str ]).
html_comp_i(62,'Attid',327,v,[ num ]).
html_comp_i(62,'Class','Attribute',d,[ str ]).
html_comp_i(62,'Controlname','Red_puertaenlaceb4',d,[ str ]).
html_comp_i(62,'Returnonclick',0,d,[ bool ]).
html_comp_i(62,'Controltype',2,d,[ num ]).
html_comp_i(62,'Inputtype',0,d,[ num ]).
html_comp_i(62,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(62,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(62,'Readonly',0,d,[ bool ]).
html_comp_i(62,'Autocomplete',-1,d,[ bool ]).
html_comp_i(62,'Ispassword',0,d,[ bool ]).
html_comp_i(62,'Autoresize',-1,d,[ bool ]).
html_comp_i(62,'Gxwidth',measure(3,chr),d,[ measure ]).
html_comp_i(62,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(62,'Ismultiline',0,d,[ bool ]).
html_comp_i(62,'Fill',-1,d,[ bool ]).
html_comp_i(62,'Backcolor',name_argb('Transparent',0,255,255,255),d,[ color ]).
html_comp_i(62,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(62,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(62,'Horizontalalignment',right,d,[ str ]).
html_comp_i(62,'Gxformat',0,d,[ num ]).
html_comp_i(62,'Title','',d,[ str ]).
html_comp_i(65,'Controlname','Btn_delete',v,[ str ]).
html_comp_i(65,'Class','BtnDelete',v,[ str ]).
html_comp_i(65,'Event','Delete',v,[ str ]).
html_comp_i(65,'Caption','Eliminar',d,[ str ]).
html_comp_i(65,'Title','Eliminar',d,[ str ]).
html_comp_i(65,'Type',0,d,[ num ]).
html_comp_i(65,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(65,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(65,'Backcolor',rgb(154,198,242),d,[ color ]).
html_comp_i(65,'Border','0',d,[ str ]).
html_comp_i(65,'Bordercolor',rgb(121,121,121),d,[ color ]).
html_comp_i(65,'Buttonborderstyle',rounded,d,[ str ]).
html_comp_i(66,'Controlname','Btn_cancel',v,[ str ]).
html_comp_i(66,'Class','BtnCancel',v,[ str ]).
html_comp_i(66,'Event','Cancel',v,[ str ]).
html_comp_i(66,'Caption','Cancelar',d,[ str ]).
html_comp_i(66,'Title','Cancelar',d,[ str ]).
html_comp_i(66,'Type',0,d,[ num ]).
html_comp_i(66,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(66,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(66,'Backcolor',rgb(154,198,242),d,[ color ]).
html_comp_i(66,'Border','0',d,[ str ]).
html_comp_i(66,'Bordercolor',rgb(121,121,121),d,[ color ]).
html_comp_i(66,'Buttonborderstyle',rounded,d,[ str ]).
html_comp_i(67,'Controlname','Btn_enter',v,[ str ]).
html_comp_i(67,'Class','BtnEnter',v,[ str ]).
html_comp_i(67,'Event','Enter',v,[ str ]).
html_comp_i(67,'Caption','Confirmar',d,[ str ]).
html_comp_i(67,'Title','Confirmar',d,[ str ]).
html_comp_i(67,'Type',0,d,[ num ]).
html_comp_i(67,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(67,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(67,'Backcolor',rgb(154,198,242),d,[ color ]).
html_comp_i(67,'Border','0',d,[ str ]).
html_comp_i(67,'Bordercolor',rgb(121,121,121),d,[ color ]).
html_comp_i(67,'Buttonborderstyle',rounded,d,[ str ]).
 
 
 
 
 
 
 
lit_i(5,1,table(5),[ ctlname('Tabletoolbar') ]).
lit_i(12,1,comp(errview),[ ctlname('Ctlerror'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(18,1,t('Ubicación:',3),[ ctlname('Textblockthdw_ubi_cod_') ]).
lit_i(20,1,t(306,2),[ ctlname(306),ctrltype(edit,20),pos(20),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(23,1,t('Cód. de Red:',3),[ ctlname('Textblockred_id') ]).
lit_i(25,1,t(300,2),[ ctlname(300),ctrltype(edit,25),pos(25),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(28,1,t('Descripción:',3),[ ctlname('Textblockred_descripcion') ]).
lit_i(30,1,t(301,2),[ ctlname(301),ctrltype(edit,30),pos(30),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(33,1,t('Dir. IP Desde:',3),[ ctlname('Textblockred_direcciondesdeb1') ]).
lit_i(35,1,t(308,2),[ ctlname(308),ctrltype(edit,35),pos(35),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(36,1,t(309,2),[ ctlname(309),ctrltype(edit,36),pos(36),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(37,1,t(310,2),[ ctlname(310),ctrltype(edit,37),pos(37),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(38,1,t(315,2),[ ctlname(315),ctrltype(edit,38),pos(38),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(41,1,t('Dir. IP Hasta:',3),[ ctlname('Textblockred_direccionhastab1') ]).
lit_i(43,1,t(316,2),[ ctlname(316),ctrltype(edit,43),pos(43),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(44,1,t(317,2),[ ctlname(317),ctrltype(edit,44),pos(44),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(45,1,t(318,2),[ ctlname(318),ctrltype(edit,45),pos(45),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(46,1,t(319,2),[ ctlname(319),ctrltype(edit,46),pos(46),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(49,1,t('Máscara de Red:',3),[ ctlname('Textblockred_mascarab1') ]).
lit_i(51,1,t(320,2),[ ctlname(320),ctrltype(edit,51),pos(51),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(52,1,t(321,2),[ ctlname(321),ctrltype(edit,52),pos(52),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(53,1,t(322,2),[ ctlname(322),ctrltype(edit,53),pos(53),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(54,1,t(323,2),[ ctlname(323),ctrltype(edit,54),pos(54),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(57,1,t('Puerta de Enlace:',3),[ ctlname('Textblockred_puertaenlaceb1') ]).
lit_i(59,1,t(324,2),[ ctlname(324),ctrltype(edit,59),pos(59),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(60,1,t(325,2),[ ctlname(325),ctrltype(edit,60),pos(60),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(61,1,t(326,2),[ ctlname(326),ctrltype(edit,61),pos(61),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(62,1,t(327,2),[ ctlname(327),ctrltype(edit,62),pos(62),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(15,1,table(15),[ ctlname('Table2') ]).
lit_i(65,1,button('Delete'),[ ctlname('Btn_delete'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(66,1,button('Cancel'),[ ctlname('Btn_cancel'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(67,1,button('Enter'),[ ctlname('Btn_enter'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(9,1,table(9),[ ctlname('Table1') ]).
lit_i(8,1,group(8),[ ctlname('Groupdata') ]).
lit_i(2,1,table(2),[ ctlname('Tablemain') ]).
lit_i(1,1,window,[ rect(0,0,1000,1000),ctlname('Form') ]).
 
 
 
 
 
 
 
 
 
att_prop_i(2,306,'ExternalName','THDW_UBI_COD_',d).
att_prop_i(2,306,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,306,'EmptyAsNull','Yes',d).
att_prop_i(2,306,'AUTONUMBER','-1',v).
att_prop_i(2,306,'AUTONUMBER_START','1',d).
att_prop_i(2,306,'AUTONUMBER_STEP','1',d).
att_prop_i(2,306,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,306,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,306,'AttRegEx','',d).
att_prop_i(2,306,'AttValidationFailedMsg','',d).
att_prop_i(2,306,'FullName','THDW_UBI_COD_',v).
att_prop_i(2,300,'ExternalName','Red_Id',d).
att_prop_i(2,300,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,300,'EmptyAsNull','Yes',d).
att_prop_i(2,300,'AUTONUMBER','0',d).
att_prop_i(2,300,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,300,'AttRegEx','',d).
att_prop_i(2,300,'AttValidationFailedMsg','',d).
att_prop_i(2,300,'FullName','Red_Id',v).
att_prop_i(2,301,'ExternalName','Red_Descripcion',d).
att_prop_i(2,301,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,301,'EmptyAsNull','Yes',d).
att_prop_i(2,301,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,301,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,301,'AttRegEx','',d).
att_prop_i(2,301,'AttValidationFailedMsg','',d).
att_prop_i(2,301,'FullName','Red_Descripcion',v).
att_prop_i(2,308,'ExternalName','Red_DireccionDesdeB1',d).
att_prop_i(2,308,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,308,'EmptyAsNull','Yes',d).
att_prop_i(2,308,'AUTONUMBER','0',d).
att_prop_i(2,308,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,308,'AttRegEx','',d).
att_prop_i(2,308,'AttValidationFailedMsg','',d).
att_prop_i(2,308,'FullName','Red_DireccionDesdeB1',v).
att_prop_i(2,309,'ExternalName','Red_DireccionDesdeB2',d).
att_prop_i(2,309,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,309,'EmptyAsNull','Yes',d).
att_prop_i(2,309,'AUTONUMBER','0',d).
att_prop_i(2,309,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,309,'AttRegEx','',d).
att_prop_i(2,309,'AttValidationFailedMsg','',d).
att_prop_i(2,309,'FullName','Red_DireccionDesdeB2',v).
att_prop_i(2,310,'ExternalName','Red_DireccionDesdeB3',d).
att_prop_i(2,310,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,310,'EmptyAsNull','Yes',d).
att_prop_i(2,310,'AUTONUMBER','0',d).
att_prop_i(2,310,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,310,'AttRegEx','',d).
att_prop_i(2,310,'AttValidationFailedMsg','',d).
att_prop_i(2,310,'FullName','Red_DireccionDesdeB3',v).
att_prop_i(2,315,'ExternalName','Red_DireccionDesdeB4',d).
att_prop_i(2,315,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,315,'EmptyAsNull','Yes',d).
att_prop_i(2,315,'AUTONUMBER','0',d).
att_prop_i(2,315,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,315,'AttRegEx','',d).
att_prop_i(2,315,'AttValidationFailedMsg','',d).
att_prop_i(2,315,'FullName','Red_DireccionDesdeB4',v).
att_prop_i(2,316,'ExternalName','Red_DireccionHastaB1',d).
att_prop_i(2,316,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,316,'EmptyAsNull','Yes',d).
att_prop_i(2,316,'AUTONUMBER','0',d).
att_prop_i(2,316,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,316,'AttRegEx','',d).
att_prop_i(2,316,'AttValidationFailedMsg','',d).
att_prop_i(2,316,'FullName','Red_DireccionHastaB1',v).
att_prop_i(2,317,'ExternalName','Red_DireccionHastaB2',d).
att_prop_i(2,317,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,317,'EmptyAsNull','Yes',d).
att_prop_i(2,317,'AUTONUMBER','0',d).
att_prop_i(2,317,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,317,'AttRegEx','',d).
att_prop_i(2,317,'AttValidationFailedMsg','',d).
att_prop_i(2,317,'FullName','Red_DireccionHastaB2',v).
att_prop_i(2,318,'ExternalName','Red_DireccionHastaB3',d).
att_prop_i(2,318,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,318,'EmptyAsNull','Yes',d).
att_prop_i(2,318,'AUTONUMBER','0',d).
att_prop_i(2,318,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,318,'AttRegEx','',d).
att_prop_i(2,318,'AttValidationFailedMsg','',d).
att_prop_i(2,318,'FullName','Red_DireccionHastaB3',v).
att_prop_i(2,319,'ExternalName','Red_DireccionHastaB4',d).
att_prop_i(2,319,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,319,'EmptyAsNull','Yes',d).
att_prop_i(2,319,'AUTONUMBER','0',d).
att_prop_i(2,319,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,319,'AttRegEx','',d).
att_prop_i(2,319,'AttValidationFailedMsg','',d).
att_prop_i(2,319,'FullName','Red_DireccionHastaB4',v).
att_prop_i(2,320,'ExternalName','Red_MascaraB1',d).
att_prop_i(2,320,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,320,'EmptyAsNull','Yes',d).
att_prop_i(2,320,'AUTONUMBER','0',d).
att_prop_i(2,320,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,320,'AttRegEx','',d).
att_prop_i(2,320,'AttValidationFailedMsg','',d).
att_prop_i(2,320,'FullName','Red_MascaraB1',v).
att_prop_i(2,321,'ExternalName','Red_MascaraB2',d).
att_prop_i(2,321,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,321,'EmptyAsNull','Yes',d).
att_prop_i(2,321,'AUTONUMBER','0',d).
att_prop_i(2,321,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,321,'AttRegEx','',d).
att_prop_i(2,321,'AttValidationFailedMsg','',d).
att_prop_i(2,321,'FullName','Red_MascaraB2',v).
att_prop_i(2,322,'ExternalName','Red_MascaraB3',d).
att_prop_i(2,322,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,322,'EmptyAsNull','Yes',d).
att_prop_i(2,322,'AUTONUMBER','0',d).
att_prop_i(2,322,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,322,'AttRegEx','',d).
att_prop_i(2,322,'AttValidationFailedMsg','',d).
att_prop_i(2,322,'FullName','Red_MascaraB3',v).
att_prop_i(2,323,'ExternalName','Red_MascaraB4',d).
att_prop_i(2,323,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,323,'EmptyAsNull','Yes',d).
att_prop_i(2,323,'AUTONUMBER','0',d).
att_prop_i(2,323,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,323,'AttRegEx','',d).
att_prop_i(2,323,'AttValidationFailedMsg','',d).
att_prop_i(2,323,'FullName','Red_MascaraB4',v).
att_prop_i(2,324,'ExternalName','Red_PuertaEnlaceB1',d).
att_prop_i(2,324,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,324,'EmptyAsNull','Yes',d).
att_prop_i(2,324,'AUTONUMBER','0',d).
att_prop_i(2,324,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,324,'AttRegEx','',d).
att_prop_i(2,324,'AttValidationFailedMsg','',d).
att_prop_i(2,324,'FullName','Red_PuertaEnlaceB1',v).
att_prop_i(2,325,'ExternalName','Red_PuertaEnlaceB2',d).
att_prop_i(2,325,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,325,'EmptyAsNull','Yes',d).
att_prop_i(2,325,'AUTONUMBER','0',d).
att_prop_i(2,325,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,325,'AttRegEx','',d).
att_prop_i(2,325,'AttValidationFailedMsg','',d).
att_prop_i(2,325,'FullName','Red_PuertaEnlaceB2',v).
att_prop_i(2,326,'ExternalName','Red_PuertaEnlaceB3',d).
att_prop_i(2,326,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,326,'EmptyAsNull','Yes',d).
att_prop_i(2,326,'AUTONUMBER','0',d).
att_prop_i(2,326,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,326,'AttRegEx','',d).
att_prop_i(2,326,'AttValidationFailedMsg','',d).
att_prop_i(2,326,'FullName','Red_PuertaEnlaceB3',v).
att_prop_i(2,327,'ExternalName','Red_PuertaEnlaceB4',d).
att_prop_i(2,327,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,327,'EmptyAsNull','Yes',d).
att_prop_i(2,327,'AUTONUMBER','0',d).
att_prop_i(2,327,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,327,'AttRegEx','',d).
att_prop_i(2,327,'AttValidationFailedMsg','',d).
att_prop_i(2,327,'FullName','Red_PuertaEnlaceB4',v).
 
tbl_prop_i(2,39,'AllDirSuper',[ [ 26,[ 306 ] ] ],v).
tbl_prop_i(2,26,'DirSubor',[ [ 39,[ 306 ] ] ],v).
tbl_prop_i(2,39,'DirSuper',[ [ 26,[ 306 ] ] ],v).
 
tbl_att_prop_i(2,39,306,'AllowNulls',n).
tbl_att_prop_i(2,39,300,'AllowNulls',n).
tbl_att_prop_i(2,39,301,'AllowNulls',n).
tbl_att_prop_i(2,39,308,'AllowNulls',n).
tbl_att_prop_i(2,39,309,'AllowNulls',n).
tbl_att_prop_i(2,39,310,'AllowNulls',n).
tbl_att_prop_i(2,39,315,'AllowNulls',n).
tbl_att_prop_i(2,39,316,'AllowNulls',n).
tbl_att_prop_i(2,39,317,'AllowNulls',n).
tbl_att_prop_i(2,39,318,'AllowNulls',n).
tbl_att_prop_i(2,39,319,'AllowNulls',n).
tbl_att_prop_i(2,39,320,'AllowNulls',n).
tbl_att_prop_i(2,39,321,'AllowNulls',n).
tbl_att_prop_i(2,39,322,'AllowNulls',n).
tbl_att_prop_i(2,39,323,'AllowNulls',n).
tbl_att_prop_i(2,39,324,'AllowNulls',n).
tbl_att_prop_i(2,39,325,'AllowNulls',n).
tbl_att_prop_i(2,39,326,'AllowNulls',n).
tbl_att_prop_i(2,39,327,'AllowNulls',n).
tbl_att_prop_i(2,26,306,'AllowNulls',n).
tbl_att_prop_i(2,26,306,'AUTONUMBER',y).
 
 
 
 
 
trn_level_i(39,[ [ 306,300,301,308,309,310,315,316,317,318,319,320,321,322,323,324,325,326,327 ],'THDW_REDES','Redes de una Ubicación de Hardware','THDW_REDES','',301 ]).
 
 
 
 
 
 
pgm_parm_i(web,170,'GX0130',[ [ int,10,0,0 ],[ int,10,0,0 ] ],[ [ pTHDW_UBI_COD_,out,[] ],[ pRed_Id,out,[] ] ]).
pgm_parm_i(proc,81,'PHDW_REDES',[ [ int,10,0,0 ],[ int,10,0,0 ] ],[ [ 'THDW_UBI_COD_',in,[] ],[ 'Red_Id',out,[] ] ]).
pgm_parm_i(proc,82,'PHDW_IP',[ [ int,10,0,0 ] ],[ [ 'THDW_UBI_COD_',inout,[] ] ]).
 
 
 
 
 
 
 
 
