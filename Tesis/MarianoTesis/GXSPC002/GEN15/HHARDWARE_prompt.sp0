spec_i([ web,10,'Búsqueda de bien de uso en Hardware','HHARDWARE_prompt',0,spa,'10_1_5-42940' ]).
 
struct_i(2,1,[ 'Thardware_ubi' ],[]).
 
level_i(2,[ 23,[ [ 23,many ] ],[],[],[ [ [ 23 ],[ 104,9,188,183,190,189,187,181,182,58,10 ] ] ],[ [ [ 23 ],[] ] ],[ 10 ],'IHARDWARE',[],[] ]).
 
tw_i(2,[]).
 
lwi_i(2,[ [ c([ t('upper(',1),t(58,2),t(')',4),t('.LIKE.',10),t('upper(',1),t('Hardware_descripcion',23),t(')',4) ],[ 58 ]),c([ t('upper(',1),t(187,2),t(')',4),t('.LIKE.',10),t('upper(',1),t('Nombre_del_tipo_de_hd',23),t(')',4) ],[ 187 ]),c([ t(104,2),t(=,10),t('0',3),t('.OR.',9),t('null(',1),t(104,2),t(')',4) ],[ 104 ]) ] ]).
 
cond_constraint_i(2,[ [ t(10,2),t(=,10),t('Hardware_id',23) ],[ 10 ],[ t('.NOT.',8),t('null(',1),t('Hardware_id',23),t(')',4) ],[] ]).
 
 
 
ta_i(2,[ [ [ 23,104 ],[ 23,9 ],[ 23,188 ],[ 23,183 ],[ 23,190 ],[ 23,189 ],[ 23,187 ],[ 23,181 ],[ 23,182 ],[ 23,58 ],[ 23,10 ] ] ]).
 
las_i(2,[ [ 'Phardware_id','Hardware_id','Hardware_descripcion','Nombre_del_tipo_de_hd',104,9,188,183,190,189,187,181,182,58,10 ] ]).
 
lac_i(2,[ [ 'Hardware_id','Hardware_descripcion','Nombre_del_tipo_de_hd' ] ]).
 
 
lits_i('ID:',5,10).
lits_i('DESCRIPCION:',5,10).
lits_i('TIPO DE HARDWARE:',5,10).
 
cls_i([ 0,0 ],[ 5,163 ]).
 
pos_i('Hardware_id',[ 0,0,0 ]).
pos_i('Hardware_descripcion',[ 0,0,0 ]).
pos_i('Nombre_del_tipo_de_hd',[ 0,0,0 ]).
pos_i(10,[ 1,2,0 ]).
pos_i(58,[ 1,2,5 ]).
pos_i(182,[ 1,2,46 ]).
pos_i(181,[ 1,2,66 ]).
pos_i(187,[ 1,2,71 ]).
pos_i(189,[ 1,2,92 ]).
pos_i(190,[ 1,2,97 ]).
pos_i(183,[ 1,2,118 ]).
pos_i(188,[ 1,2,123 ]).
pos_i(9,[ 1,2,144 ]).
 
repeat_i(2,[ 1,2,[ 10,58,182,181,187,189,190,183,188,9 ],[] ]).
 
default_i(e('Todas',2,2,'1')).
 
rule_i(0,datastore(3,'DS_LAST_CHANGE','')).
rule_i(0,datastore(3,'LOCK_RETRY','10')).
rule_i(0,datastore(3,'WAIT_RECORD','0')).
rule_i(0,datastore(3,'SQLSERVER_VERSION','9')).
rule_i(0,datastore(3,'COMMENT_ON','No')).
rule_i(0,datastore(3,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(3,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(3,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(3,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(3,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(3,'CS_SCHEMA','')).
rule_i(0,datastore(3,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(3,'JRN400','QSQJRN')).
rule_i(0,datastore(3,'CREATE_SAVF','Yes')).
rule_i(0,datastore(3,'PGMLIB','')).
rule_i(0,datastore(3,'DTALIB','')).
rule_i(0,datastore(3,'CC_USER_PASS','')).
rule_i(0,datastore(3,'CC_USER_ID','')).
rule_i(0,datastore(3,'CC_SERVER','')).
rule_i(0,datastore(3,'CC_DBNAME','')).
rule_i(0,datastore(3,'RecycleRWMin','30')).
rule_i(0,datastore(3,'RecycleRWType','1')).
rule_i(0,datastore(3,'RecycleRW','-1')).
rule_i(0,datastore(3,'POOL_STARTUP','No')).
rule_i(0,datastore(3,'POOLSIZE_RW','10')).
rule_i(0,datastore(3,'UnlimitedRWPool','-1')).
rule_i(0,datastore(3,'PoolRWEnabled','-1')).
rule_i(0,datastore(3,'CS_RPCPGML','')).
rule_i(0,datastore(3,'JDBC_DATASOURCE','')).
rule_i(0,datastore(3,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(3,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(3,'USER_PASSWORD','')).
rule_i(0,datastore(3,'USER_ID','')).
rule_i(0,datastore(3,'TRUSTED_CONNECTION','Yes')).
rule_i(0,datastore(3,'CS_CONNECT','First')).
rule_i(0,datastore(3,'DBMS_PORT','')).
rule_i(0,datastore(3,'CS_SERVER','')).
rule_i(0,datastore(3,'CS_DBNAME','')).
rule_i(0,datastore(3,'CS_FLEDSNAME','')).
rule_i(0,datastore(3,'CS_DRVNAME','sql server')).
rule_i(0,datastore(3,'CS_DSNAME','')).
rule_i(0,datastore(3,'DB_URL','')).
rule_i(0,datastore(3,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(3,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(3,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(3,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(3,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(3,'MAIN_DS','-1')).
rule_i(0,datastore(3,'REORG_GEN','8')).
rule_i(0,datastore(3,'HelpKeyword','23')).
rule_i(0,datastore(3,'DBMS',12)).
rule_i(0,datastore(3,'NAME','DESARROLLO')).
rule_i(0,datastore(2,'DS_LAST_CHANGE','')).
rule_i(0,datastore(2,'LOCK_RETRY','10')).
rule_i(0,datastore(2,'WAIT_RECORD','0')).
rule_i(0,datastore(2,'SQLSERVER_VERSION','9')).
rule_i(0,datastore(2,'COMMENT_ON','No')).
rule_i(0,datastore(2,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(2,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(2,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(2,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(2,'CS_SCHEMA','')).
rule_i(0,datastore(2,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(2,'JRN400','QSQJRN')).
rule_i(0,datastore(2,'CREATE_SAVF','Yes')).
rule_i(0,datastore(2,'PGMLIB','')).
rule_i(0,datastore(2,'DTALIB','')).
rule_i(0,datastore(2,'CC_USER_PASS','')).
rule_i(0,datastore(2,'CC_USER_ID','')).
rule_i(0,datastore(2,'CC_SERVER','')).
rule_i(0,datastore(2,'CC_DBNAME','')).
rule_i(0,datastore(2,'RecycleRWMin','30')).
rule_i(0,datastore(2,'RecycleRWType','1')).
rule_i(0,datastore(2,'RecycleRW','-1')).
rule_i(0,datastore(2,'POOL_STARTUP','No')).
rule_i(0,datastore(2,'POOLSIZE_RW','10')).
rule_i(0,datastore(2,'UnlimitedRWPool','-1')).
rule_i(0,datastore(2,'PoolRWEnabled','-1')).
rule_i(0,datastore(2,'CS_RPCPGML','')).
rule_i(0,datastore(2,'JDBC_DATASOURCE','')).
rule_i(0,datastore(2,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(2,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(2,'USER_PASSWORD','')).
rule_i(0,datastore(2,'USER_ID','')).
rule_i(0,datastore(2,'TRUSTED_CONNECTION','Yes')).
rule_i(0,datastore(2,'CS_CONNECT','First')).
rule_i(0,datastore(2,'DBMS_PORT','')).
rule_i(0,datastore(2,'CS_SERVER','')).
rule_i(0,datastore(2,'CS_DBNAME','')).
rule_i(0,datastore(2,'CS_FLEDSNAME','')).
rule_i(0,datastore(2,'CS_DRVNAME','sql server')).
rule_i(0,datastore(2,'CS_DSNAME','')).
rule_i(0,datastore(2,'DB_URL','')).
rule_i(0,datastore(2,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(2,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(2,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(2,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(2,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(2,'MAIN_DS','-1')).
rule_i(0,datastore(2,'REORG_GEN','8')).
rule_i(0,datastore(2,'HelpKeyword','23')).
rule_i(0,datastore(2,'DBMS',12)).
rule_i(0,datastore(2,'NAME',soporte_notebook)).
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','9')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'CC_USER_PASS','')).
rule_i(0,datastore(1,'CC_USER_ID','')).
rule_i(0,datastore(1,'CC_SERVER','')).
rule_i(0,datastore(1,'CC_DBNAME','')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','')).
rule_i(0,datastore(1,'USER_PASSWORD',gx)).
rule_i(0,datastore(1,'USER_ID',gx)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','172.22.108.50')).
rule_i(0,datastore(1,'CS_DBNAME','MarianoTesis')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('Hint_firstrows','UMPV')).
rule_i(0,prop('JOIN_TYPE','UMPV')).
rule_i(0,prop('DBMS_JOINS','UMPV')).
rule_i(0,prop('REFRESH_TOUT_TRIG','ALL')).
rule_i(0,prop('REFRESH_TOUT','')).
rule_i(0,prop('KEY_ENTER','UMPV')).
rule_i(0,prop('KEY_CANCEL','UMPV')).
rule_i(0,prop('KEY_REFRESH','UMPV')).
rule_i(0,prop('KEY_HELP','UMPV')).
rule_i(0,prop('ASSIGNED_FNC_KEYS','UMPV')).
rule_i(0,prop('FIRST_WD_DATEPICKER','UMPV')).
rule_i(0,prop('WNUM_DATEPICKER','UMPV')).
rule_i(0,prop(idUSE_WEB_DATEPICKER,'UMPV')).
rule_i(0,prop('STD_FUNC_OBJECT','No')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142 spc0060')).
rule_i(0,prop('COMPRESS_HTML','UMPV')).
rule_i(0,prop('AUTO_REFRESH','NO')).
rule_i(0,prop('CACHE_EXPIRES','')).
rule_i(0,prop('WEB_AUTO_FOCUS','UMPV')).
rule_i(0,prop('AjaxRequestsSecurity','High')).
rule_i(0,prop('USE_ENCRYPTION','UMPV')).
rule_i(0,prop('HTTP_PROTOCOL','UMPV')).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop('SHOWMASTERPAGE_POPUP','0')).
rule_i(0,prop('MasterPage',o(13,'MPTrazabilidad'))).
rule_i(0,prop('WEB_COMP','No')).
rule_i(0,prop('Theme',o(25,'Modern'))).
rule_i(0,prop('Folder',o(8,'SERENITY'))).
rule_i(0,prop('ObjDesc','Búsqueda de bien de uso en Hardware')).
rule_i(0,prop('ObjName','HHARDWARE_prompt')).
rule_i(0,maingen(15)).
rule_i(0,parm([ 'Phardware_id' ],[])).
rule_i(0,parmio([ [ 'Phardware_id',out ] ])).
 
a_i(1,2,d,t('Nombre_del_tipo_de_hd',23),[],[ 187,187,[ [ [ 23,187 ] ],n,[ [ 23,many ] ],[],[],[ 187 ],[],[],[] ],empty,'Todos' ]).
a_i(2,1,f,'Err',[],[ [],[ t('0',3) ] ]).
a_i(3,2,t,23,[],[ [],'IHARDWARE',[] ]).
 
v_i(d,i,1,[]).
v_i(d,o,1,'Nombre_del_tipo_de_hd').
v_i(f,i,2,[]).
v_i(f,o,2,'Err').
v_i(t,i,3,[]).
v_i(t,o,3,104).
v_i(t,o,3,9).
v_i(t,o,3,188).
v_i(t,o,3,183).
v_i(t,o,3,190).
v_i(t,o,3,189).
v_i(t,o,3,187).
v_i(t,o,3,181).
v_i(t,o,3,182).
v_i(t,o,3,58).
v_i(t,o,3,10).
 
 
 
 
 
attri_i(104,[ 'HDW_IDT',int,8,0,'ZZZZZZZ9',0,'ID EN TRAZABILIDAD DE BIENES DE USO','',0 ]).
attri_i(9,[ 'HARDWARE_NRO_SERIE',svchar,20,0,'',0,'NRO. SERIE','',0 ]).
attri_i(188,[ 'MODELO_DE_COMPONENTES_NOMBRE',char,20,0,'',0,'MODELO','',0 ]).
attri_i(183,[ 'MODELO_DE_COMPONENTES_ID',int,4,0,'ZZZ9',0,'ID','',0 ]).
attri_i(190,[ 'MARCAS_DESCRIPCION',char,20,0,'',0,'MARCA','',0 ]).
attri_i(189,[ 'MARCAS_ID',int,4,0,'ZZZ9',0,'ID','',0 ]).
attri_i(187,[ 'NOMBRE_DEL_TIPO_DE_HD',char,20,0,'',0,'TIPO DE HW','',0 ]).
attri_i(181,[ 'TIPOS_DE_HARDWARE_ID',int,4,0,'ZZZ9',0,'ID','',0 ]).
attri_i(182,[ fecha_alta,dtime,10,8,'99/99/9999 99:99:99',0,fecha_alta,'',0 ]).
attri_i(58,[ 'HARDWARE_DESCRIPCION',svchar,40,0,'',0,'HARDWARE','',0 ]).
attri_i(10,[ 'HARDWARE_ID',int,4,0,'ZZZ9',0,'ID','',0 ]).
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',41 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',40 ]).
attri_i('Pthardware_ubi',[ pTHARDWARE_UBI,int,10,0,'ZZZZZZZZZ9',0,'p THARDWARE_ UBI','',39 ]).
attri_i('Phardware_descripcion',[ pHARDWARE_DESCRIPCION,svchar,40,0,'',0,'p HARDWARE_ DESCRIPCION','',38 ]).
attri_i('Phardware_id',[ pHARDWARE_ID,int,4,0,'ZZZ9',0,'p HARDWARE_ ID','',37 ]).
attri_i('Todas',[ 'Todas',boolean,4,0,'',0,'Todas','',36 ]).
attri_i('Ver',[ 'Ver',bits,4,0,'',0,'Ver','',35 ]).
attri_i('Usuario',[ 'USUARIO',char,16,0,'',0,'USUARIO','',34 ]).
attri_i('Tipos_de_hardware_id',[ 'TIPOS_DE_HARDWARE_ID',int,4,0,'ZZZ9',0,'TIPOS_ DE_ HARDWARE_ ID','',33 ]).
attri_i('Thardware_ubi',[ 'THARDWARE_UBI',int,10,0,'ZZZZZZZZZ9',0,'THARDWARE_ UBI','',32 ]).
attri_i('Sistema',[ 'SISTEMA',char,16,0,'@!',0,'SISTEMA','',31 ]).
attri_i('Ruta',[ 'Ruta',char,50,0,'',0,'Ruta','',30 ]).
attri_i('Responsable_armado_pc',[ 'RESPONSABLE_ARMADO_PC',char,15,0,'',0,'RESPONSABLE_ ARMADO_ PC','',29 ]).
attri_i('Prueba_microfono_audio',[ 'PRUEBA_MICROFONO_AUDIO',char,2,0,'',0,'PRUEBA_ MICROFONO_ AUDIO','',28 ]).
attri_i('Nombre_del_tipo_de_hd',[ 'NOMBRE_DEL_TIPO_DE_HD',char,20,0,'',0,'DESCRIPCION TIPO DE HARDWARE','',27 ]).
attri_i('Nombre',[ nombre,char,50,0,'',0,nombre,'',26 ]).
attri_i('Modificar',[ 'Modificar',bits,4,0,'',0,'Modificar','',25 ]).
attri_i('Modelo_de_componentes_nombre',[ 'MODELO_DE_COMPONENTES_NOMBRE',char,20,0,'',0,'DESCRIPCION MODELO','',24 ]).
attri_i('Modelo_de_componentes_id',[ 'MODELO_DE_COMPONENTES_ID',int,4,0,'ZZZ9',0,'ID','',23 ]).
attri_i('Marcas_id',[ 'MARCAS_ID',int,4,0,'ZZZ9',0,'ID','',22 ]).
attri_i('Marcas_descripcion',[ 'MARCAS_DESCRIPCION',char,20,0,'',0,'MARCAS DESCRIPCION','',21 ]).
attri_i('Interno',[ 'INTERNO',char,10,0,'',0,'INTERNO','',20 ]).
attri_i('I',[ i,int,10,0,'ZZZZZZZZZ9',0,i,'',19 ]).
attri_i('Hardware_observaciones',[ 'HARDWARE_OBSERVACIONES',svchar,40,0,'',0,'HARDWARE OBSERVACIONES','',18 ]).
attri_i('Hardware_nro_serie',[ 'HARDWARE_NRO_SERIE',svchar,20,0,'',0,'NRO SERIE HARDWARE','',17 ]).
attri_i('Hardware_nro_bien',[ 'HARDWARE_NRO_BIEN',int,10,0,'ZZZZZZZZZ9',0,'NRO BIEN HARDWARE','',16 ]).
attri_i('Hardware_id',[ 'HARDWARE_ID',int,4,0,'ZZZ9',0,'HARDWARE_ ID','',15 ]).
attri_i('Hardware_descripcion',[ 'HARDWARE_DESCRIPCION',svchar,40,0,'',0,'DESCRIPCION HARDWARE','',14 ]).
attri_i('File',[ file,o(file),0,0,'',0,file,'',13 ]).
attri_i('Fecha_bajh',[ 'FECHA_BAJH',dtime,10,8,'99/99/9999 99:99:99',0,'FECHA_ BAJH','',12 ]).
attri_i('Fecha_baja',[ 'FECHA_BAJA',dtime,10,8,'99/99/99',0,'FECHA_ BAJA','',11 ]).
attri_i('Fecha_alth',[ 'FECHA_ALTH',dtime,10,8,'99/99/9999 99:99:99',0,'FECHA_ ALTH','',10 ]).
attri_i('Fecha_alta',[ 'FECHA_ALTA',dtime,10,8,'99/99/99',0,'FECHA_ ALTA','',9 ]).
attri_i('Datosxls',[ datosxls,o(exceldoc),0,0,'',0,datosxls,'',8 ]).
attri_i('Context',[ context,o('Context'),0,0,'',0,context,'',7 ]).
attri_i('Baja',[ 'Baja',bits,4,0,'',0,'Baja','',6 ]).
attri_i('Activo',[ 'ACTIVO',char,2,0,'',0,'ACTIVO','',5 ]).
 
table_i(23,[ 'HARDWARE',[ 10,181,58,182,187,183,188,189,190,9,104 ],'HARDWARE','HARDWARE' ]).
 
index_i(23,[ 'IHARDWARE',u,[ 10 ],'IHARDWARE' ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
break_i(2,nvg,1,[],[ [ 10,58,182,181,187,189,190,183,188,9 ],[],[] ]).
 
b_group_i(2,1,lit,0,1,1).
b_group_i(2,2,lit,0,2,0).
 
b_line_i(1,2,1,cmd,1,[ t('',146,1,0),t('Enter',3,1,7) ]).
b_line_i(2,2,2,cmd,1,[ t('',107,1,0),t('Phardware_id',23,1,0),t(=,10,1,0),t(10,2,1,0) ]).
b_line_i(3,2,2,cmd,1,[ t('',118,1,0) ]).
b_line_i(4,2,2,cmd,1,[ t('',147,1,0) ]).
b_line_i(1000,2,2,cmd,0,[ t('',146,0,0),t('Load',3,0,0) ]).
b_line_i(1001,2,2,cmd,0,[ t('',155,0,0) ]).
b_line_i(1002,2,2,cmd,0,[ t('',147,0,0) ]).
 
sf_break_i(34,2).
 
 
 
 
 
 
 
 
 
 
 
 
html_i(2,html('<P align="center">')).
html_i(3,table(3)).
html_i(45,html('</P>')).
 
html_sub_i(3,0,html_i(0,html('<TBODY>'))).
html_sub_i(3,4,html_i(1,row(4))).
html_sub_i(4,5,html_i(0,cell(5))).
html_sub_i(5,6,html_i(0,comp(errview))).
html_sub_i(3,7,html_i(2,row(7))).
html_sub_i(7,8,html_i(0,cell(8))).
html_sub_i(8,9,html_i(0,table(9))).
html_sub_i(9,0,html_i(0,html('<TBODY>'))).
html_sub_i(9,10,html_i(1,row(10))).
html_sub_i(10,11,html_i(0,cell(11))).
html_sub_i(11,12,html_i(0,t('ID:',3))).
html_sub_i(10,13,html_i(1,cell(13))).
html_sub_i(13,14,html_i(0,t('Hardware_id',23))).
html_sub_i(9,15,html_i(2,row(15))).
html_sub_i(15,16,html_i(0,cell(16))).
html_sub_i(16,17,html_i(0,t('DESCRIPCION:',3))).
html_sub_i(15,18,html_i(1,cell(18))).
html_sub_i(18,19,html_i(0,t('Hardware_descripcion',23))).
html_sub_i(9,20,html_i(3,row(20))).
html_sub_i(20,21,html_i(0,cell(21))).
html_sub_i(21,22,html_i(0,t('TIPO DE HARDWARE:',3))).
html_sub_i(20,23,html_i(1,cell(23))).
html_sub_i(23,24,html_i(0,t('Nombre_del_tipo_de_hd',23))).
html_sub_i(9,25,html_i(4,row(25))).
html_sub_i(25,26,html_i(0,cell(26))).
html_sub_i(25,27,html_i(1,cell(27))).
html_sub_i(9,28,html_i(5,row(28))).
html_sub_i(28,29,html_i(0,cell(29))).
html_sub_i(29,30,html_i(0,button('Refresh'))).
html_sub_i(28,31,html_i(1,cell(31))).
html_sub_i(9,0,html_i(6,html('</TBODY>'))).
html_sub_i(3,32,html_i(3,row(32))).
html_sub_i(32,33,html_i(0,cell(33))).
html_sub_i(33,34,html_i(0,s(34))).
html_sub_i(3,0,html_i(4,html('</TBODY>'))).
 
html_tags_i(1,'Class','Form').
 
html_comp_i(6,'Backcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(3,'Id','Table1',v,[ str ]).
html_comp_i(3,'Class','Table',v,[ str ]).
html_comp_i(3,'Title','',d,[ str ]).
html_comp_i(3,'Align',left,d,[ str ]).
html_comp_i(3,'Backgroundgx','',d,[ str ]).
html_comp_i(3,'Bgcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(3,'Border','0',d,[ str ]).
html_comp_i(3,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(3,'Cellpadding','1',d,[ str ]).
html_comp_i(3,'Cellspacing','2',d,[ str ]).
html_comp_i(3,'Height',measure(104,px),v,[ measure ]).
html_comp_i(3,'Width',measure(912,px),v,[ measure ]).
html_comp_i(3,'Rules',none,d,[ str ]).
html_comp_i(5,'Align',center,v,[ str ]).
html_comp_i(6,'Controlname','Errviewer1',v,[ str ]).
html_comp_i(6,'Class','ErrorViewer',d,[ str ]).
html_comp_i(6,'Displaymode',1,d,[ num ]).
html_comp_i(6,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(6,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(6,'Fill',-1,d,[ bool ]).
html_comp_i(9,'Id','Table2',v,[ str ]).
html_comp_i(9,'Class','Table',v,[ str ]).
html_comp_i(9,'Title','',d,[ str ]).
html_comp_i(9,'Align',left,d,[ str ]).
html_comp_i(9,'Backgroundgx','',d,[ str ]).
html_comp_i(9,'Bgcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(9,'Border','0',d,[ str ]).
html_comp_i(9,'Bordercolor',rgb(0,0,0),d,[ color ]).
html_comp_i(9,'Cellpadding','1',d,[ str ]).
html_comp_i(9,'Cellspacing','2',d,[ str ]).
html_comp_i(9,'Height',measure(0,px),d,[ measure ]).
html_comp_i(9,'Width',measure(0,px),d,[ measure ]).
html_comp_i(9,'Rules',none,d,[ str ]).
html_comp_i(12,'Caption','ID:',d,[ str ]).
html_comp_i(12,'Id','Textblock12',v,[ str ]).
html_comp_i(12,'Class','TextBlock',d,[ str ]).
html_comp_i(12,'Event','',d,[ str ]).
html_comp_i(12,'Returnonclick',0,d,[ bool ]).
html_comp_i(12,'Gxformat',0,d,[ num ]).
html_comp_i(12,'Title','',d,[ str ]).
html_comp_i(12,'Fill',-1,d,[ bool ]).
html_comp_i(12,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(12,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(12,'Font',font('Microsoft Sans Serif',8,[ bold ]),v,[ font ]).
html_comp_i(14,'Attid',-15,v,[ num ]).
html_comp_i(14,'Controlname','&Hardware_id',d,[ str ]).
html_comp_i(14,'Returnonclick',0,d,[ bool ]).
html_comp_i(14,'Controltype',2,d,[ num ]).
html_comp_i(14,'Inputtype',0,d,[ num ]).
html_comp_i(14,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(14,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(14,'Readonly',0,d,[ bool ]).
html_comp_i(14,'Autocomplete',-1,d,[ bool ]).
html_comp_i(14,'Ispassword',0,d,[ bool ]).
html_comp_i(14,'Autoresize',-1,d,[ bool ]).
html_comp_i(14,'Gxwidth',measure(4,chr),d,[ measure ]).
html_comp_i(14,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(14,'Ismultiline',0,d,[ bool ]).
html_comp_i(14,'Fill',-1,d,[ bool ]).
html_comp_i(14,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(14,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(14,'Font',font('Verdana',12,[]),d,[ font ]).
html_comp_i(14,'Horizontalalignment',right,d,[ str ]).
html_comp_i(14,'Gxformat',0,d,[ num ]).
html_comp_i(14,'Title','',d,[ str ]).
html_comp_i(17,'Caption','DESCRIPCION:',d,[ str ]).
html_comp_i(17,'Id','Textblock9',v,[ str ]).
html_comp_i(17,'Class','TextBlock',v,[ str ]).
html_comp_i(17,'Event','',d,[ str ]).
html_comp_i(17,'Returnonclick',0,d,[ bool ]).
html_comp_i(17,'Gxformat',0,d,[ num ]).
html_comp_i(17,'Title','',d,[ str ]).
html_comp_i(17,'Fill',-1,d,[ bool ]).
html_comp_i(17,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(17,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(17,'Font',font('Microsoft Sans Serif',8,[ bold ]),v,[ font ]).
html_comp_i(19,'Attid',-14,v,[ num ]).
html_comp_i(19,'Controlname','&Hardware_descripcion',d,[ str ]).
html_comp_i(19,'Returnonclick',0,d,[ bool ]).
html_comp_i(19,'Controltype',2,d,[ num ]).
html_comp_i(19,'Inputtype',0,d,[ num ]).
html_comp_i(19,'Editautocomplete',0,d,[ num ]).
html_comp_i(19,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(19,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(19,'Readonly',0,d,[ bool ]).
html_comp_i(19,'Autocomplete',-1,d,[ bool ]).
html_comp_i(19,'Ispassword',0,d,[ bool ]).
html_comp_i(19,'Autoresize',-1,d,[ bool ]).
html_comp_i(19,'Gxwidth',measure(40,chr),v,[ measure ]).
html_comp_i(19,'Gxheight',measure(1,row),v,[ measure ]).
html_comp_i(19,'Ismultiline',0,d,[ bool ]).
html_comp_i(19,'Fill',-1,d,[ bool ]).
html_comp_i(19,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(19,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(19,'Font',font('Verdana',12,[]),d,[ font ]).
html_comp_i(19,'Horizontalalignment',left,d,[ str ]).
html_comp_i(19,'Gxformat',0,d,[ num ]).
html_comp_i(19,'Title','',d,[ str ]).
html_comp_i(22,'Caption','TIPO DE HARDWARE:',d,[ str ]).
html_comp_i(22,'Id','Textblock6',v,[ str ]).
html_comp_i(22,'Class','TextBlock',v,[ str ]).
html_comp_i(22,'Event','',d,[ str ]).
html_comp_i(22,'Returnonclick',0,d,[ bool ]).
html_comp_i(22,'Gxformat',0,d,[ num ]).
html_comp_i(22,'Title','',d,[ str ]).
html_comp_i(22,'Fill',-1,d,[ bool ]).
html_comp_i(22,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(22,'Forecolor',rgb(116,116,116),d,[ color ]).
html_comp_i(22,'Font',font('Microsoft Sans Serif',8,[ bold ]),v,[ font ]).
html_comp_i(24,'Attid',-27,v,[ num ]).
html_comp_i(24,'Controlname','&Nombre_del_tipo_de_hd',d,[ str ]).
html_comp_i(24,'Returnonclick',0,d,[ bool ]).
html_comp_i(24,'Controltype',4,v,[ num ]).
html_comp_i(24,'Controlitemvalues',187,v,[ num ]).
html_comp_i(24,'Controlitemdescription',187,v,[ num ]).
html_comp_i(24,'Controlsortdescription',-1,d,[ bool ]).
html_comp_i(24,'Controlwhere','',d,[ str ]).
html_comp_i(24,'Controlrestrictedby','',d,[ str ]).
html_comp_i(24,'Addemptyitem',-1,v,[ bool ]).
html_comp_i(24,'Emptyitemtext','Todos',v,[ str ]).
html_comp_i(24,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(24,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(24,'Readonly',0,d,[ bool ]).
html_comp_i(24,'Autoresize',-1,d,[ bool ]).
html_comp_i(24,'Gxwidth',measure(20,chr),v,[ measure ]).
html_comp_i(24,'Ismultiline',0,d,[ bool ]).
html_comp_i(24,'Fill',-1,d,[ bool ]).
html_comp_i(24,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(24,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(24,'Font',font('Verdana',12,[]),d,[ font ]).
html_comp_i(24,'Horizontalalignment',left,d,[ str ]).
html_comp_i(24,'Title','',d,[ str ]).
html_comp_i(30,'Controlname','Button7',v,[ str ]).
html_comp_i(30,'Class','Button',v,[ str ]).
html_comp_i(30,'Event','Refresh',v,[ str ]).
html_comp_i(30,'Caption','Actualizar',d,[ str ]).
html_comp_i(30,'Title','Actualizar',d,[ str ]).
html_comp_i(30,'Type',0,d,[ num ]).
html_comp_i(30,'Font',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(30,'Forecolor',rgb(64,64,64),d,[ color ]).
html_comp_i(30,'Backcolor',rgb(154,198,242),d,[ color ]).
html_comp_i(30,'Border','0',d,[ str ]).
html_comp_i(30,'Bordercolor',rgb(121,121,121),d,[ color ]).
html_comp_i(30,'Buttonborderstyle',rounded,d,[ str ]).
html_comp_i(34,'Controlname','Grid1',v,[ str ]).
html_comp_i(34,'Controlorder','',d,[ str ]).
html_comp_i(34,'Controlwhere','',d,[ str ]).
html_comp_i(34,'Iddataselector','',d,[ str ]).
html_comp_i(34,'Rules',none,d,[ str ]).
html_comp_i(34,'Sflrender','',d,[ str ]).
html_comp_i(34,'Class','Grid',v,[ str ]).
html_comp_i(34,'Autoresize',-1,v,[ bool ]).
html_comp_i(34,'Gxwidth',measure(0,px),d,[ measure ]).
html_comp_i(34,'Gxheight',measure(0,px),d,[ measure ]).
html_comp_i(34,'Backgroundgx','',d,[ str ]).
html_comp_i(34,'Border','0',d,[ str ]).
html_comp_i(34,'Backcolorstyle',3,v,[ num ]).
html_comp_i(34,'Bordercolor',rgb(219,236,252),d,[ color ]).
html_comp_i(34,'Maxrows',10,v,[ num ]).
html_comp_i(34,'Title','',d,[ str ]).
html_comp_i(34,'Linescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(34,'Linesbackcolor',rgb(240,240,240),d,[ color ]).
html_comp_i(34,'Linesbackcolor2',rgb(229,229,229),d,[ color ]).
html_comp_i(34,'Linesfont',font('Microsoft Sans Serif',8,[]),v,[ font ]).
html_comp_i(34,'Titlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(34,'Titlebackcolor',rgb(70,130,180),d,[ color ]).
html_comp_i(34,'Titlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(34,'Align',left,d,[ str ]).
html_comp_i(34,'Cellpadding','1',d,[ str ]).
html_comp_i(34,'Cellspacing','2',d,[ str ]).
html_comp_i(34,'Sortable',-1,d,[ bool ]).
html_comp_i(34,'Allowdrop',0,d,[ bool ]).
html_comp_i(34,'Allowdrag',0,d,[ bool ]).
html_comp_i(34,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(34,'Allowcollapsing',0,v,[ bool ]).
html_comp_i(34,'Allowselection',-1,v,[ bool ]).
html_comp_i(34,'Selectioncolor',rgb(128,255,255),v,[ color ]).
html_comp_i(34,'Allowhover',-1,d,[ bool ]).
html_comp_i(34,'Hovercolor',rgb(0,192,192),v,[ color ]).
html_comp_i(35,'Colattid',10,v,[ num ]).
html_comp_i(35,'Controlname','Hardware_id',d,[ str ]).
html_comp_i(35,'Class','Attribute',d,[ str ]).
html_comp_i(35,'Returnonclick',0,d,[ bool ]).
html_comp_i(35,'Eventgx','Enter',v,[ str ]).
html_comp_i(35,'Controltype',2,d,[ num ]).
html_comp_i(35,'Inputtype',0,d,[ num ]).
html_comp_i(35,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(35,'Colreadonly',-1,d,[ bool ]).
html_comp_i(35,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(35,'Ispassword',0,d,[ bool ]).
html_comp_i(35,'Colautoresize',-1,d,[ bool ]).
html_comp_i(35,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(35,'Height',measure(17,px),d,[ measure ]).
html_comp_i(35,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(35,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(35,'Coltitle','ID',d,[ str ]).
html_comp_i(35,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(35,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(35,'Horizontalalignment',right,d,[ str ]).
html_comp_i(35,'Gxformat',0,d,[ num ]).
html_comp_i(35,'Colvisible',-1,v,[ bool ]).
html_comp_i(35,'Title','',d,[ str ]).
html_comp_i(36,'Colattid',58,v,[ num ]).
html_comp_i(36,'Controlname','Hardware_descripcion',d,[ str ]).
html_comp_i(36,'Class','Attribute',d,[ str ]).
html_comp_i(36,'Returnonclick',0,d,[ bool ]).
html_comp_i(36,'Eventgx','Enter',v,[ str ]).
html_comp_i(36,'Controltype',2,d,[ num ]).
html_comp_i(36,'Inputtype',0,d,[ num ]).
html_comp_i(36,'Editautocomplete',0,d,[ num ]).
html_comp_i(36,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(36,'Colreadonly',-1,d,[ bool ]).
html_comp_i(36,'Emptyasnull','Yes',v,[ str ]).
html_comp_i(36,'Ispassword',0,d,[ bool ]).
html_comp_i(36,'Colautoresize',-1,d,[ bool ]).
html_comp_i(36,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(36,'Height',measure(17,px),d,[ measure ]).
html_comp_i(36,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(36,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(36,'Coltitle','HARDWARE',d,[ str ]).
html_comp_i(36,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(36,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(36,'Horizontalalignment',left,d,[ str ]).
html_comp_i(36,'Gxformat',0,d,[ num ]).
html_comp_i(36,'Colvisible',-1,d,[ bool ]).
html_comp_i(36,'Title','',d,[ str ]).
html_comp_i(37,'Colattid',182,v,[ num ]).
html_comp_i(37,'Controlname','Fecha_alta',d,[ str ]).
html_comp_i(37,'Class','Attribute',d,[ str ]).
html_comp_i(37,'Returnonclick',0,d,[ bool ]).
html_comp_i(37,'Eventgx','',d,[ str ]).
html_comp_i(37,'Controltype',2,d,[ num ]).
html_comp_i(37,'Inputtype',0,d,[ num ]).
html_comp_i(37,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(37,'Colreadonly',-1,d,[ bool ]).
html_comp_i(37,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(37,'Ispassword',0,d,[ bool ]).
html_comp_i(37,'Colautoresize',-1,d,[ bool ]).
html_comp_i(37,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(37,'Height',measure(17,px),d,[ measure ]).
html_comp_i(37,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(37,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(37,'Coltitle','FECHA ALTA',d,[ str ]).
html_comp_i(37,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(37,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(37,'Horizontalalignment',right,d,[ str ]).
html_comp_i(37,'Gxformat',0,d,[ num ]).
html_comp_i(37,'Colvisible',-1,d,[ bool ]).
html_comp_i(37,'Title','',d,[ str ]).
html_comp_i(37,'Use_datepicker',-1,d,[ bool ]).
html_comp_i(37,'Flat_datepicker',0,d,[ bool ]).
html_comp_i(38,'Colattid',181,v,[ num ]).
html_comp_i(38,'Controlname','Tipos_de_hardware_id',d,[ str ]).
html_comp_i(38,'Class','Attribute',d,[ str ]).
html_comp_i(38,'Returnonclick',0,d,[ bool ]).
html_comp_i(38,'Eventgx','',d,[ str ]).
html_comp_i(38,'Controltype',2,d,[ num ]).
html_comp_i(38,'Inputtype',0,d,[ num ]).
html_comp_i(38,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(38,'Colreadonly',-1,d,[ bool ]).
html_comp_i(38,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(38,'Ispassword',0,d,[ bool ]).
html_comp_i(38,'Colautoresize',-1,d,[ bool ]).
html_comp_i(38,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(38,'Height',measure(17,px),d,[ measure ]).
html_comp_i(38,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(38,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(38,'Coltitle','ID',d,[ str ]).
html_comp_i(38,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(38,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(38,'Horizontalalignment',right,d,[ str ]).
html_comp_i(38,'Gxformat',0,d,[ num ]).
html_comp_i(38,'Colvisible',0,v,[ bool ]).
html_comp_i(38,'Title','',d,[ str ]).
html_comp_i(39,'Colattid',187,v,[ num ]).
html_comp_i(39,'Controlname','Nombre_del_tipo_de_hd',d,[ str ]).
html_comp_i(39,'Class','Attribute',d,[ str ]).
html_comp_i(39,'Returnonclick',0,d,[ bool ]).
html_comp_i(39,'Eventgx','',d,[ str ]).
html_comp_i(39,'Controltype',2,d,[ num ]).
html_comp_i(39,'Inputtype',0,d,[ num ]).
html_comp_i(39,'Editautocomplete',0,d,[ num ]).
html_comp_i(39,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(39,'Colreadonly',-1,d,[ bool ]).
html_comp_i(39,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(39,'Ispassword',0,d,[ bool ]).
html_comp_i(39,'Colautoresize',0,v,[ bool ]).
html_comp_i(39,'Colwidth',measure(180,px),v,[ measure ]).
html_comp_i(39,'Height',measure(17,px),d,[ measure ]).
html_comp_i(39,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(39,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(39,'Coltitle','TIPO DE HW',d,[ str ]).
html_comp_i(39,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(39,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(39,'Horizontalalignment',left,d,[ str ]).
html_comp_i(39,'Gxformat',0,d,[ num ]).
html_comp_i(39,'Colvisible',-1,d,[ bool ]).
html_comp_i(39,'Title','',d,[ str ]).
html_comp_i(40,'Colattid',189,v,[ num ]).
html_comp_i(40,'Controlname','Marcas_id',d,[ str ]).
html_comp_i(40,'Class','Attribute',d,[ str ]).
html_comp_i(40,'Returnonclick',0,d,[ bool ]).
html_comp_i(40,'Eventgx','',d,[ str ]).
html_comp_i(40,'Controltype',2,d,[ num ]).
html_comp_i(40,'Inputtype',0,d,[ num ]).
html_comp_i(40,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(40,'Colreadonly',-1,d,[ bool ]).
html_comp_i(40,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(40,'Ispassword',0,d,[ bool ]).
html_comp_i(40,'Colautoresize',-1,d,[ bool ]).
html_comp_i(40,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(40,'Height',measure(17,px),d,[ measure ]).
html_comp_i(40,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(40,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(40,'Coltitle','ID',d,[ str ]).
html_comp_i(40,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(40,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(40,'Horizontalalignment',right,d,[ str ]).
html_comp_i(40,'Gxformat',0,d,[ num ]).
html_comp_i(40,'Colvisible',0,v,[ bool ]).
html_comp_i(40,'Title','',d,[ str ]).
html_comp_i(41,'Colattid',190,v,[ num ]).
html_comp_i(41,'Controlname','Marcas_descripcion',d,[ str ]).
html_comp_i(41,'Class','Attribute',d,[ str ]).
html_comp_i(41,'Returnonclick',0,d,[ bool ]).
html_comp_i(41,'Eventgx','',d,[ str ]).
html_comp_i(41,'Controltype',2,d,[ num ]).
html_comp_i(41,'Inputtype',0,d,[ num ]).
html_comp_i(41,'Editautocomplete',0,d,[ num ]).
html_comp_i(41,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(41,'Colreadonly',-1,d,[ bool ]).
html_comp_i(41,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(41,'Ispassword',0,d,[ bool ]).
html_comp_i(41,'Colautoresize',-1,d,[ bool ]).
html_comp_i(41,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(41,'Height',measure(17,px),d,[ measure ]).
html_comp_i(41,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(41,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(41,'Coltitle','MARCA',d,[ str ]).
html_comp_i(41,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(41,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(41,'Horizontalalignment',left,d,[ str ]).
html_comp_i(41,'Gxformat',0,d,[ num ]).
html_comp_i(41,'Colvisible',-1,d,[ bool ]).
html_comp_i(41,'Title','',d,[ str ]).
html_comp_i(42,'Colattid',183,v,[ num ]).
html_comp_i(42,'Controlname','Modelo_de_componentes_id',d,[ str ]).
html_comp_i(42,'Class','Attribute',d,[ str ]).
html_comp_i(42,'Returnonclick',0,d,[ bool ]).
html_comp_i(42,'Eventgx','',d,[ str ]).
html_comp_i(42,'Controltype',2,d,[ num ]).
html_comp_i(42,'Inputtype',0,d,[ num ]).
html_comp_i(42,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(42,'Colreadonly',-1,d,[ bool ]).
html_comp_i(42,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(42,'Ispassword',0,d,[ bool ]).
html_comp_i(42,'Colautoresize',-1,d,[ bool ]).
html_comp_i(42,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(42,'Height',measure(17,px),d,[ measure ]).
html_comp_i(42,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(42,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(42,'Coltitle','ID',d,[ str ]).
html_comp_i(42,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(42,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(42,'Horizontalalignment',right,d,[ str ]).
html_comp_i(42,'Gxformat',0,d,[ num ]).
html_comp_i(42,'Colvisible',0,v,[ bool ]).
html_comp_i(42,'Title','',d,[ str ]).
html_comp_i(43,'Colattid',188,v,[ num ]).
html_comp_i(43,'Controlname','Modelo_de_componentes_nombre',d,[ str ]).
html_comp_i(43,'Class','Attribute',d,[ str ]).
html_comp_i(43,'Returnonclick',0,d,[ bool ]).
html_comp_i(43,'Eventgx','',d,[ str ]).
html_comp_i(43,'Controltype',2,d,[ num ]).
html_comp_i(43,'Inputtype',0,d,[ num ]).
html_comp_i(43,'Editautocomplete',0,d,[ num ]).
html_comp_i(43,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(43,'Colreadonly',-1,d,[ bool ]).
html_comp_i(43,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(43,'Ispassword',0,d,[ bool ]).
html_comp_i(43,'Colautoresize',0,v,[ bool ]).
html_comp_i(43,'Colwidth',measure(180,px),v,[ measure ]).
html_comp_i(43,'Height',measure(17,px),d,[ measure ]).
html_comp_i(43,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(43,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(43,'Coltitle','MODELO',d,[ str ]).
html_comp_i(43,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(43,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(43,'Horizontalalignment',left,d,[ str ]).
html_comp_i(43,'Gxformat',0,d,[ num ]).
html_comp_i(43,'Colvisible',-1,d,[ bool ]).
html_comp_i(43,'Title','',d,[ str ]).
html_comp_i(44,'Colattid',9,v,[ num ]).
html_comp_i(44,'Controlname','Hardware_nro_serie',d,[ str ]).
html_comp_i(44,'Class','Attribute',d,[ str ]).
html_comp_i(44,'Returnonclick',0,d,[ bool ]).
html_comp_i(44,'Eventgx','',d,[ str ]).
html_comp_i(44,'Controltype',2,d,[ num ]).
html_comp_i(44,'Inputtype',0,d,[ num ]).
html_comp_i(44,'Editautocomplete',0,d,[ num ]).
html_comp_i(44,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(44,'Colreadonly',-1,d,[ bool ]).
html_comp_i(44,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(44,'Ispassword',0,d,[ bool ]).
html_comp_i(44,'Colautoresize',-1,d,[ bool ]).
html_comp_i(44,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(44,'Height',measure(17,px),d,[ measure ]).
html_comp_i(44,'Collinesfont',font('Microsoft Sans Serif',8,[]),d,[ font ]).
html_comp_i(44,'Collinescolor',rgb(0,0,0),d,[ color ]).
html_comp_i(44,'Coltitle','NRO. SERIE',d,[ str ]).
html_comp_i(44,'Coltitlefont',font('Microsoft Sans Serif',8,[ bold ]),d,[ font ]).
html_comp_i(44,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(44,'Horizontalalignment',left,d,[ str ]).
html_comp_i(44,'Gxformat',0,d,[ num ]).
html_comp_i(44,'Colvisible',-1,d,[ bool ]).
html_comp_i(44,'Title','',d,[ str ]).
 
 
 
 
 
 
 
lit_i(6,1,comp(errview),[ ctlname('Errviewer1'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(12,1,t('ID:',3),[ ctlname('Textblock12') ]).
lit_i(14,1,t('Hardware_id',23),[ ctlname('&Hardware_id'),ctrltype(edit,14),pos(14),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(17,1,t('DESCRIPCION:',3),[ ctlname('Textblock9') ]).
lit_i(19,1,t('Hardware_descripcion',23),[ ctlname('&Hardware_descripcion'),ctrltype(edit,19),pos(19),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(22,1,t('TIPO DE HARDWARE:',3),[ ctlname('Textblock6') ]).
lit_i(24,1,t('Nombre_del_tipo_de_hd',23),[ ctlname('&Nombre_del_tipo_de_hd'),ctrltype(dyncombo,24),pos(24),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(30,1,button('Refresh'),[ ctlname('Button7'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(9,1,table(9),[ ctlname('Table2') ]).
lit_i(35,1,s(t(10,2),34),[ ctlname(10),ctrltype(edit,35),pos(35),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(36,1,s(t(58,2),34),[ ctlname(58),ctrltype(edit,36),pos(36),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(37,1,s(t(182,2),34),[ ctlname(182),ctrltype(edit,37),pos(37),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(38,1,s(t(181,2),34),[ ctlname(181),ctrltype(edit,38),pos(38),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(39,1,s(t(187,2),34),[ ctlname(187),ctrltype(edit,39),pos(39),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(40,1,s(t(189,2),34),[ ctlname(189),ctrltype(edit,40),pos(40),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(41,1,s(t(190,2),34),[ ctlname(190),ctrltype(edit,41),pos(41),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(42,1,s(t(183,2),34),[ ctlname(183),ctrltype(edit,42),pos(42),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(43,1,s(t(188,2),34),[ ctlname(188),ctrltype(edit,43),pos(43),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(44,1,s(t(9,2),34),[ ctlname(9),ctrltype(edit,44),pos(44),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(34,1,s(34),[ ctlname('Grid1'),el([ t(10,2),t(58,2),t(182,2),t(181,2),t(187,2),t(189,2),t(190,2),t(183,2),t(188,2),t(9,2) ]),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(3,1,table(3),[ ctlname('Table1') ]).
lit_i(1,1,window,[ rect(0,0,1000,1000),ctlname('Form') ]).
 
 
 
 
 
 
 
 
 
att_prop_i(2,10,'ExternalName','HARDWARE_ID',d).
att_prop_i(2,10,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,10,'EmptyAsNull','Yes',d).
att_prop_i(2,10,'AUTONUMBER','-1',v).
att_prop_i(2,10,'AUTONUMBER_START','1',d).
att_prop_i(2,10,'AUTONUMBER_STEP','1',d).
att_prop_i(2,10,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,10,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,10,'AttRegEx','',d).
att_prop_i(2,10,'AttValidationFailedMsg','',d).
att_prop_i(2,10,'FullName','HARDWARE_ID',v).
att_prop_i(2,58,'ExternalName','HARDWARE_DESCRIPCION',d).
att_prop_i(2,58,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,58,'EmptyAsNull','Yes',d).
att_prop_i(2,58,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,58,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,58,'AttRegEx','',d).
att_prop_i(2,58,'AttValidationFailedMsg','',d).
att_prop_i(2,58,'FullName','HARDWARE_DESCRIPCION',v).
att_prop_i(2,182,'ExternalName',fecha_alta,d).
att_prop_i(2,182,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,182,'EmptyAsNull','Yes',d).
att_prop_i(2,182,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,182,'AttRegEx','',d).
att_prop_i(2,182,'AttValidationFailedMsg','',d).
att_prop_i(2,182,idDATEFORMAT,idDATEFORMAT_LONG,v).
att_prop_i(2,182,idHOURFORMAT,idHOURFORMAT_HOURMINSEC,v).
att_prop_i(2,182,'FullName',fecha_alta,v).
att_prop_i(2,181,'ExternalName','TIPOS_DE_HARDWARE_ID',d).
att_prop_i(2,181,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,181,'EmptyAsNull','Yes',d).
att_prop_i(2,181,'AUTONUMBER','-1',v).
att_prop_i(2,181,'AUTONUMBER_START','1',d).
att_prop_i(2,181,'AUTONUMBER_STEP','1',d).
att_prop_i(2,181,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,181,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,181,'AttRegEx','',d).
att_prop_i(2,181,'AttValidationFailedMsg','',d).
att_prop_i(2,181,'FullName','TIPOS_DE_HARDWARE_ID',v).
att_prop_i(2,187,'ExternalName','NOMBRE_DEL_TIPO_DE_HD',d).
att_prop_i(2,187,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,187,'EmptyAsNull','Yes',d).
att_prop_i(2,187,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,187,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,187,'AttRegEx','',d).
att_prop_i(2,187,'AttValidationFailedMsg','',d).
att_prop_i(2,187,'FullName','NOMBRE_DEL_TIPO_DE_HD',v).
att_prop_i(2,189,'ExternalName','MARCAS_ID',d).
att_prop_i(2,189,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,189,'EmptyAsNull','Yes',d).
att_prop_i(2,189,'AUTONUMBER','-1',v).
att_prop_i(2,189,'AUTONUMBER_START','1',d).
att_prop_i(2,189,'AUTONUMBER_STEP','1',d).
att_prop_i(2,189,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,189,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,189,'AttRegEx','',d).
att_prop_i(2,189,'AttValidationFailedMsg','',d).
att_prop_i(2,189,'FullName','MARCAS_ID',v).
att_prop_i(2,190,'ExternalName','MARCAS_DESCRIPCION',d).
att_prop_i(2,190,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,190,'EmptyAsNull','Yes',d).
att_prop_i(2,190,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,190,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,190,'AttRegEx','',d).
att_prop_i(2,190,'AttValidationFailedMsg','',d).
att_prop_i(2,190,'FullName','MARCAS_DESCRIPCION',v).
att_prop_i(2,183,'ExternalName','MODELO_DE_COMPONENTES_ID',d).
att_prop_i(2,183,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,183,'EmptyAsNull','Yes',d).
att_prop_i(2,183,'AUTONUMBER','-1',v).
att_prop_i(2,183,'AUTONUMBER_START','1',d).
att_prop_i(2,183,'AUTONUMBER_STEP','1',d).
att_prop_i(2,183,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,183,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,183,'AttRegEx','',d).
att_prop_i(2,183,'AttValidationFailedMsg','',d).
att_prop_i(2,183,'FullName','MODELO_DE_COMPONENTES_ID',v).
att_prop_i(2,188,'ExternalName','MODELO_DE_COMPONENTES_NOMBRE',d).
att_prop_i(2,188,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,188,'EmptyAsNull','Yes',d).
att_prop_i(2,188,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,188,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,188,'AttRegEx','',d).
att_prop_i(2,188,'AttValidationFailedMsg','',d).
att_prop_i(2,188,'FullName','MODELO_DE_COMPONENTES_NOMBRE',v).
att_prop_i(2,9,'ExternalName','HARDWARE_NRO_SERIE',d).
att_prop_i(2,9,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,9,'EmptyAsNull','Yes',d).
att_prop_i(2,9,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,9,'DB_NLS_SUPPORT','No',d).
att_prop_i(2,9,'AttRegEx','',d).
att_prop_i(2,9,'AttValidationFailedMsg','',d).
att_prop_i(2,9,'FullName','HARDWARE_NRO_SERIE',v).
att_prop_i(2,104,'ExternalName','HDW_IDT',d).
att_prop_i(2,104,'ExternalNamespace','MarianoTesis',d).
att_prop_i(2,104,'EmptyAsNull','Yes',d).
att_prop_i(2,104,'AUTONUMBER','0',d).
att_prop_i(2,104,'ATT_INITIAL_VALUE',[ t('0',3) ],v).
att_prop_i(2,104,'AttRegEx','',d).
att_prop_i(2,104,'AttValidationFailedMsg','',d).
att_prop_i(2,104,'FullName','HDW_IDT',v).
 
 
tbl_att_prop_i(2,23,10,'AllowNulls',n).
tbl_att_prop_i(2,23,10,'AUTONUMBER',y).
tbl_att_prop_i(2,23,181,'AllowNulls',n).
tbl_att_prop_i(2,23,58,'AllowNulls',n).
tbl_att_prop_i(2,23,187,'AllowNulls',n).
tbl_att_prop_i(2,23,183,'AllowNulls',n).
tbl_att_prop_i(2,23,188,'AllowNulls',n).
tbl_att_prop_i(2,23,189,'AllowNulls',n).
tbl_att_prop_i(2,23,190,'AllowNulls',n).
tbl_att_prop_i(2,23,9,'AllowNulls',n).
tbl_att_prop_i(2,23,104,'AllowNulls',n).
 
var_prop_i(2,'Thardware_ubi','ATT_INITIAL_VALUE',[ t('1',3) ],d).
var_prop_i(2,'Pthardware_ubi','ATT_INITIAL_VALUE',[ t('1',3) ],d).
 
 
 
 
 
struct_dt_i([ 26,3,0 ],name,'Context').
struct_dt_i([ 26,3,0 ],namespace,'MarianoTesis').
struct_dt_i([ 26,3,0 ],'ObjName','Context').
struct_dt_i([ 26,3,0 ],'ObjDesc','Context').
struct_dt_i([ 26,3,0 ],'ExternalName','Context').
struct_dt_i([ 26,3,0 ],'ExternalNamespace','MarianoTesis').
struct_dt_i([ 26,3,0 ],fullname,'Context').
 
struct_dt_elem_i([ 26,3,0 ],1,name,'User').
struct_dt_elem_i([ 26,3,0 ],1,camelname,'User').
struct_dt_elem_i([ 26,3,0 ],1,length,20).
struct_dt_elem_i([ 26,3,0 ],1,decimals,0).
struct_dt_elem_i([ 26,3,0 ],1,type,[ 5,20,0 ]).
struct_dt_elem_i([ 26,3,0 ],1,pic,'').
struct_dt_elem_i([ 26,3,0 ],1,collection,'False').
struct_dt_elem_i([ 26,3,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],2,name,'Companycode').
struct_dt_elem_i([ 26,3,0 ],2,camelname,'CompanyCode').
struct_dt_elem_i([ 26,3,0 ],2,length,4).
struct_dt_elem_i([ 26,3,0 ],2,decimals,0).
struct_dt_elem_i([ 26,3,0 ],2,sign,0).
struct_dt_elem_i([ 26,3,0 ],2,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,3,0 ],2,pic,'ZZZ9').
struct_dt_elem_i([ 26,3,0 ],2,collection,'False').
struct_dt_elem_i([ 26,3,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],3,name,'Profile').
struct_dt_elem_i([ 26,3,0 ],3,camelname,'Profile').
struct_dt_elem_i([ 26,3,0 ],3,length,20).
struct_dt_elem_i([ 26,3,0 ],3,decimals,0).
struct_dt_elem_i([ 26,3,0 ],3,type,[ 5,20,0 ]).
struct_dt_elem_i([ 26,3,0 ],3,pic,'').
struct_dt_elem_i([ 26,3,0 ],3,collection,'False').
struct_dt_elem_i([ 26,3,0 ],3,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],3,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],3,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],4,name,'Sistema').
struct_dt_elem_i([ 26,3,0 ],4,camelname,'Sistema').
struct_dt_elem_i([ 26,3,0 ],4,length,4).
struct_dt_elem_i([ 26,3,0 ],4,decimals,0).
struct_dt_elem_i([ 26,3,0 ],4,sign,0).
struct_dt_elem_i([ 26,3,0 ],4,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,3,0 ],4,pic,'ZZZ9').
struct_dt_elem_i([ 26,3,0 ],4,collection,'False').
struct_dt_elem_i([ 26,3,0 ],4,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],4,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],4,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],4,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],4,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],5,name,'Programa').
struct_dt_elem_i([ 26,3,0 ],5,camelname,'Programa').
struct_dt_elem_i([ 26,3,0 ],5,length,4).
struct_dt_elem_i([ 26,3,0 ],5,decimals,0).
struct_dt_elem_i([ 26,3,0 ],5,sign,0).
struct_dt_elem_i([ 26,3,0 ],5,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,3,0 ],5,pic,'ZZZ9').
struct_dt_elem_i([ 26,3,0 ],5,collection,'False').
struct_dt_elem_i([ 26,3,0 ],5,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],5,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],5,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],5,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],5,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],6,name,'Icono').
struct_dt_elem_i([ 26,3,0 ],6,camelname,'Icono').
struct_dt_elem_i([ 26,3,0 ],6,length,100).
struct_dt_elem_i([ 26,3,0 ],6,decimals,0).
struct_dt_elem_i([ 26,3,0 ],6,type,[ 5,100,0 ]).
struct_dt_elem_i([ 26,3,0 ],6,pic,'').
struct_dt_elem_i([ 26,3,0 ],6,collection,'False').
struct_dt_elem_i([ 26,3,0 ],6,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],6,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],6,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],6,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],6,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],7,name,'Sesion').
struct_dt_elem_i([ 26,3,0 ],7,camelname,'Sesion').
struct_dt_elem_i([ 26,3,0 ],7,basedon,12).
struct_dt_elem_i([ 26,3,0 ],7,length,8).
struct_dt_elem_i([ 26,3,0 ],7,decimals,0).
struct_dt_elem_i([ 26,3,0 ],7,sign,0).
struct_dt_elem_i([ 26,3,0 ],7,type,[ 4,8,0 ]).
struct_dt_elem_i([ 26,3,0 ],7,pic,'ZZZZZZZ9').
struct_dt_elem_i([ 26,3,0 ],7,collection,'False').
struct_dt_elem_i([ 26,3,0 ],7,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],7,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],7,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],7,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],7,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],8,name,'Denominacion').
struct_dt_elem_i([ 26,3,0 ],8,camelname,'Denominacion').
struct_dt_elem_i([ 26,3,0 ],8,length,50).
struct_dt_elem_i([ 26,3,0 ],8,decimals,0).
struct_dt_elem_i([ 26,3,0 ],8,type,[ 5,50,0 ]).
struct_dt_elem_i([ 26,3,0 ],8,pic,'').
struct_dt_elem_i([ 26,3,0 ],8,collection,'False').
struct_dt_elem_i([ 26,3,0 ],8,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],8,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],8,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],8,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],8,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],9,name,'Tipo').
struct_dt_elem_i([ 26,3,0 ],9,camelname,'Tipo').
struct_dt_elem_i([ 26,3,0 ],9,length,1).
struct_dt_elem_i([ 26,3,0 ],9,decimals,0).
struct_dt_elem_i([ 26,3,0 ],9,type,[ 5,1,0 ]).
struct_dt_elem_i([ 26,3,0 ],9,pic,'').
struct_dt_elem_i([ 26,3,0 ],9,collection,'False').
struct_dt_elem_i([ 26,3,0 ],9,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],9,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],9,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],9,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],9,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],10,name,'Codigo').
struct_dt_elem_i([ 26,3,0 ],10,camelname,'Codigo').
struct_dt_elem_i([ 26,3,0 ],10,length,8).
struct_dt_elem_i([ 26,3,0 ],10,decimals,0).
struct_dt_elem_i([ 26,3,0 ],10,sign,0).
struct_dt_elem_i([ 26,3,0 ],10,type,[ 4,8,0 ]).
struct_dt_elem_i([ 26,3,0 ],10,pic,'ZZZZZZZ9').
struct_dt_elem_i([ 26,3,0 ],10,collection,'False').
struct_dt_elem_i([ 26,3,0 ],10,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],10,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],10,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],10,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],10,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],11,name,'Zona').
struct_dt_elem_i([ 26,3,0 ],11,camelname,'Zona').
struct_dt_elem_i([ 26,3,0 ],11,length,1).
struct_dt_elem_i([ 26,3,0 ],11,decimals,0).
struct_dt_elem_i([ 26,3,0 ],11,type,[ 5,1,0 ]).
struct_dt_elem_i([ 26,3,0 ],11,pic,'').
struct_dt_elem_i([ 26,3,0 ],11,collection,'False').
struct_dt_elem_i([ 26,3,0 ],11,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],11,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],11,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],11,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],11,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],12,name,'Plan').
struct_dt_elem_i([ 26,3,0 ],12,camelname,'Plan').
struct_dt_elem_i([ 26,3,0 ],12,length,5).
struct_dt_elem_i([ 26,3,0 ],12,decimals,0).
struct_dt_elem_i([ 26,3,0 ],12,type,[ 5,5,0 ]).
struct_dt_elem_i([ 26,3,0 ],12,pic,'').
struct_dt_elem_i([ 26,3,0 ],12,collection,'False').
struct_dt_elem_i([ 26,3,0 ],12,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],12,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],12,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],12,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],12,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],13,name,'Mail').
struct_dt_elem_i([ 26,3,0 ],13,camelname,'Mail').
struct_dt_elem_i([ 26,3,0 ],13,length,256).
struct_dt_elem_i([ 26,3,0 ],13,decimals,0).
struct_dt_elem_i([ 26,3,0 ],13,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,3,0 ],13,pic,'').
struct_dt_elem_i([ 26,3,0 ],13,collection,'False').
struct_dt_elem_i([ 26,3,0 ],13,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],13,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],13,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],13,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],13,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],14,name,'Tipo_usuario').
struct_dt_elem_i([ 26,3,0 ],14,camelname,tipo_usuario).
struct_dt_elem_i([ 26,3,0 ],14,length,3).
struct_dt_elem_i([ 26,3,0 ],14,decimals,0).
struct_dt_elem_i([ 26,3,0 ],14,type,[ 5,3,0 ]).
struct_dt_elem_i([ 26,3,0 ],14,pic,'').
struct_dt_elem_i([ 26,3,0 ],14,collection,'False').
struct_dt_elem_i([ 26,3,0 ],14,'XmlType','Element').
struct_dt_elem_i([ 26,3,0 ],14,'XmlName','').
struct_dt_elem_i([ 26,3,0 ],14,'XmlNamespace','').
struct_dt_elem_i([ 26,3,0 ],14,soaptype,'').
struct_dt_elem_i([ 26,3,0 ],14,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,3,0 ],7,pic,'@!').
 
 
 
 
 
 
 
 
 
 
 
 
